{"version":3,"sources":["automation.ts","Api/types.ts","store/index.ts","components/SkeletonLoaders.tsx","components/NavBar.tsx","Api/api.worker.ts","WorkerContext.tsx","components/SignIn.tsx","components/Markets/Buy.tsx","components/Markets/Sell.tsx","components/Ships/Travel.tsx","components/Ships/TravelProgress.tsx","components/Ships/ShipCard.tsx","App.tsx","components/Profile.tsx","components/Ships/PurchaseShipModal.tsx","components/Ships/Available.tsx","components/Ships/ShipsGroup.tsx","components/Ships/Owned.tsx","components/Ships/Ships.tsx","components/Systems/Locations.tsx","components/Systems/Systems.tsx","components/Systems/Location.tsx","components/Money/GetLoadModal.tsx","components/Money/Available.tsx","components/Money/Owned.tsx","components/Money/Worth.tsx","components/Money/Money.tsx","components/Markets/Markets.tsx","components/Systems/Structures/Build.tsx","components/Systems/Structures/BuiltStructures.tsx","components/Systems/Structures/index.tsx","index.tsx"],"names":["Worker_fn","Worker","LoanType","LocationType","CargoType","LoanStatus","initialState","user","credits","loans","ships","username","undefined","account","token","flightPlans","marketData","automateAll","systems","availableShips","spyShips","spacetraders","createSlice","name","reducers","reset","state","Object","assign","setUser","payload","setToken","setCredits","addLoan","push","updateLoans","addShip","updateShip","find","x","id","updateShips","addFlightPlan","ship","shipId","location","flightPlanId","spaceAvailable","fuelConsumed","fuel","cargo","good","Fuel","fuelRemaining","quantity","splice","findIndex","removeFlightPlan","destination","updateMarketData","some","item","planet","symbol","map","localStorage","setItem","JSON","stringify","updateGoodPriceAfterBuy","market","marketplace","order","purchasePricePerUnit","pricePerUnit","updateGoodPriceAfterSell","sellPricePerUnit","setSystems","setAllAutomationState","setAvailableShips","updateScrapShip","parseInt","result","replace","setSpyShip","removeSpyShip","actions","reducer","store","configureStore","preloadedState","ModalPlaceholder","speed","width","height","viewBox","backgroundColor","foregroundColor","y","rx","ry","CardLoader","HeaderLoader","ProfileLoader","MarketCardLoader","className","NavBar","useSelector","useState","dropDownOpen","setDropDownOpen","ref","useRef","dispatch","useDispatch","useEffect","pageEvent","e","current","contains","target","window","addEventListener","removeEventListener","type","onClick","xmlns","fill","aria-hidden","fillRule","d","clipRule","role","aria-orientation","aria-labelledby","removeItem","Fragment","to","length","toLocaleString","title","strokeWidth","stroke","strokeLinecap","strokeLinejoin","WorkerContext","createContext","WorkerProvider","children","worker","setWorker","apiKey","getItem","parse","ApiWorker","wrap","Api","then","api","Provider","value","GetApiKey","useContext","apiWorker","userName","setUserName","userToken","setUserToken","formValid","setFormValid","signIn","setSignIn","error","setError","disabled","setDisabled","getApiKey","a","preventDefault","getToken","setCredentials","getUser","message","Login","validate","valid","document","querySelector","checkValidity","placeholder","onChange","required","Buy","handleClose","show","setMarketData","selectedMarket","setSelectedMarket","purchaseQuantity","setPurchaseQuantity","working","setWorking","showHideModal","getMarket","data","sort","b","maxQuantity","maxCargo","Math","floor","volumePerUnit","quantityAvailable","purchaseMarket","purchaseOrder","toLowerCase","split","s","charAt","toUpperCase","slice","join","min","max","Sell","sellQuantity","setSellQuantity","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","sellMarket","sellOrder","deleteMarket","deleteOrder","shipInfo","depositGoods","sellPrice","totalVolume","system","locations","Wormhole","Travel","shipError","setLocations","autoBuyFuel","setAutoBuyFuel","getLocations","loc","createFlightPlan","retry","warpJump","flightPlan","startsWith","requiredFuelString","match","ownedShips","htmlFor","checked","TravelProgressBar","props","completed","style","transition","ShipCard","compact","automation","autoEnabled","spyShip","showBuyModal","setBuyModalShow","showSellModal","setSellModalShow","showTravelModal","setTravelModalShow","remainingTime","setRemainingTime","Date","now","time","setTime","isHovered","setIsHovered","interval","setInterval","clearInterval","formatDistanceToNowStrict","arrivesAt","calcProgress","getUnixTime","timeRemainingInSeconds","scrapShip","success","isFuture","filter","reduce","acc","TravelProgress","onMouseEnter","onMouseLeave","price","purchaseLocations","round","getShipValue","isChecked","manufacturer","enableBackground","weapons","plating","departure","defaultProps","AutomationWorkerApiAction","Profile","messages","status","Current","loan","repaymentAmount","formatDistanceToNow","due","addSuffix","PurchaseShipModal","history","useHistory","loading","setLoading","purchaseShip","buyShip","renderButtons","Available","setShips","sortOrder","setOrder","sortType","setSortType","showModal","setModalShow","selectedShip","setSelectedShip","lowestPrice","prev","curr","sorted","class","transform","version","ShipsGroup","setShipError","collapseHeight","setCollapseHeight","duration","group","localeCompare","sortShips","Owned","shipGroups","setShipGroups","forEach","destinationSystem","UNKNOWN","ordered","keys","obj","key","automateDisabled","z","setAutomation","Ships","exact","activeClassName","path","component","Locations","sortedLocations","setSortedLocations","systemsInfo","temp","GetSystems","sortedSystem","Moon","parent","satellites","hasShipYard","structures","satellite","SystemMap","LocationInfo","useParams","locInfo","setLocInfo","getLocation","goBack","structure","ownedBy","GetLoan","requestLoan","newLoan","Startup","amount","termInDays","rate","setLoans","selectedLoan","setSelectedLoan","getLoansAvailable","GetLoans","collateralRequired","response","setResponse","repayLoan","loanId","replayLoan","Worth","uniqueShipCount","setUniqueShipCount","shipPrices","setShipPrices","cargos","setCargos","totalWorth","setTotalWorth","getShips","getShipPrices","shipTypes","Map","results","Array","from","entries","shipType","uniques","cargosArray","values","bestValue","markets","locationsWithGood","marketCargo","total","Loans","Markets","automationEnabled","activeSystem","setActiveSystem","changeSystem","updatedAt","getMarketData","formatString","getDataForLocation","getUpdatedTime","getSystemSymbolFromLocation","console","log","distanceBetween","point1","point2","ceil","sqrt","fuelRequired","bestRoutes","uniqueLocations","Set","uniqueSystems","bestSystemRoutes","Research","i","cpdv","lastUpdated","existing","routes","getBestRoutes","route","currentTarget","Structures","setStructures","locationsForStructure","setLocationsForStructure","selectedStructure","setSelectedStructure","selectedLocation","setSelectedLocation","getStructures","findStructureLocation","allowedLocationTypes","locationType","getLocationsForStructure","consumes","produces","BuiltStructures","userStructures","setUserStructures","sysLoc","Build","App","automationWorker","setAutomationWorker","FetchAccount","queryFlightPlan","terminatedAt","getSystems","marketDataStore","loadedMarketData","spyShipsData","loadedSpyShipsData","GetShips","webworkerError","automationWorkerMakeApiCall","action","CreateFlightPlan","RemoveFlightPlan","GetFlightPlan","MarketData","BuyShip","UpdateShip","newShip","automationGetStore","getState","updateState","AutoWorker","Comlink","AutomationWorker","instance","createWorker","start","stop","SignIn","Location","fallback","Systems","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.0fd06442.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"automation.worker.js\");\n}\n","export enum LoanType {\n   Startup = 'STARTUP',\n}\n\nexport enum LocationType {\n   Planet = 'PLANET',\n   Moon = 'MOON',\n   GasGiant = 'GAS_GIANT',\n   Asteroid = 'ASTEROID',\n   Wormhole = 'WORMHOLE',\n   Nebula = 'NEBULA',\n}\n\nexport enum CargoType {\n   BiometricFirearms = 'BIOMETRIC_FIREARMS',\n   Chemicals = 'CHEMICALS',\n   Construction = 'CONSTRUCTION_MATERIALS',\n   Consumer = 'CONSUMER_GOODS',\n   Electronics = 'ELECTRONICS',\n   ExoticPlasma = 'EXOTIC PLASMA',\n   Explosives = 'EXPLOSIVES',\n   Food = 'FOOD',\n   Fuel = 'FUEL',\n   FusionReactors = 'FUSION_REACTORS',\n   Machinery = 'MACHINERY',\n   Metals = 'METALS',\n   Nanobots = 'NANOTBOTS',\n   Narcotics = 'NARCOTICS',\n   PrecisionInstruments = 'PRECISION_INSTRUMENTS',\n   ProteinSynthesizers = 'PROTEIN_SYNTHESIZERS',\n   RareMetals = 'RARE_METALS',\n   Research = 'RESEARCH',\n   ShipParts = 'SHIP_PARTS',\n   ShipPlating = 'SHIP_PLATING',\n   Textiles = 'TEXTILES',\n   UnstableCompounds = 'UNSTABLE_COMPOUNDS',\n   Drones = 'DRONES',\n}\n\nexport enum LoanStatus {\n   Current = 'CURRENT',\n   Paid = 'PAID',\n   PaidLate = 'PAID_LATE',\n}\n\nexport interface Status {\n   status: string;\n}\n\nexport interface Account {\n   token: string,\n   user: {\n      createdAt: string,\n      credits: number,\n      id: string,\n      email: string,\n      picture: string,\n      updatedAt: string,\n      username: string,\n   }\n}\n\nexport interface Loans {\n   loans: Loan[],\n}\n\nexport interface Loan {\n   type: string,\n   amount: number,\n   collateralRequired: boolean,\n   rate: number,\n   termInDays: number,\n}\n\nexport interface OwnedLoan {\n   due: Date,\n   id: string,\n   repaymentAmount: number,\n   status: LoanStatus,\n   type: LoanType,\n}\n\nexport interface ShipsAvailable {\n   ships: Ship[],\n}\n\nexport interface OwnedShips {\n   ships: OwnedShip[]\n}\n\nexport interface ShipInfo {\n   ship: OwnedShip,\n}\n\nexport interface Ship {\n   class: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   purchaseLocations: PurchaseLocation[],\n   speed: number,\n   type: string,\n   weapons: number,\n}\n\nexport interface OwnedShip {\n   cargo: Cargo[],\n   class: string,\n   flightPlanId?: string,\n   id: string,\n   location?: string,\n   manufacturer: string,\n   maxCargo: number,\n   plating: number,\n   spaceAvailable: number,\n   speed: number,\n   type: string,\n   weapons: number,\n   x: number,\n   y: number,\n}\n\nexport interface BuyShipResponse {\n   credits: number,\n   ship: OwnedShip,\n}\n\nexport interface ScrapShipResponse {\n   success: string,\n}\n\nexport interface Cargo {\n   good: CargoType,\n   quantity: number,\n   totalVolume: number,\n}\n\nexport interface PurchaseLocation {\n   location: string,\n   price: number,\n}\n\nexport interface User {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string,\n   }\n}\n\nexport interface GetLoanResponse {\n   credits: number,\n   loan: OwnedLoan,\n}\n\nexport interface Location {\n   symbol: string,\n   type: LocationType,\n   name: string,\n   x: number,\n   y: number,\n   ships: {\n      shipId: string,\n      username: string,\n      shipType: string,\n   }[],\n   allowsConstruction: boolean,\n   anomaly?: string,\n   messages?: string[],\n   structures?: Structure[]\n}\n\nexport interface Locations {\n   locations: Location[],\n}\n\nexport interface Structure {\n   id: string,\n   type: LocationType,\n   location: string,\n   ownedBy?: {\n      username: string\n   }\n}\n\nexport interface LocationResponse {\n   location: Location,\n}\n\nexport interface System {\n   symbol: string,\n   name: string,\n   locations: Location[],\n}\n\nexport interface Systems {\n   systems: System[],\n}\n\nexport interface Market {\n   location: Planet,\n}\n\nexport interface Marketplace {\n   symbol: CargoType,\n   volumePerUnit: number,\n   pricePerUnit: number,\n   quantityAvailable: number,\n   purchasePricePerUnit: number,\n   sellPricePerUnit: number,\n}\n\nexport interface Planet {\n   marketplace: Marketplace[],\n   name: string,\n   symbol: string,\n   type: string,\n   x: number,\n   y: number,\n}\n\nexport interface Purchase {\n   credits: number,\n   order: Order,\n   ship: OwnedShip,\n}\n\nexport interface Order {\n   good: string,\n   pricePerUnit: number,\n   quantity: number,\n   total: number,\n}\n\nexport interface StructureMaterials {\n   good: CargoType,\n   quantity: number,\n   targetQuantity: number,\n}\n\nexport interface DepositResponse {\n   deposit: {\n      good: CargoType,\n      quantity: number,\n   },\n   structure: Structure,\n}\n\nexport interface Jettison {\n   good: CargoType,\n   quantityRemaining: number,\n   shipId: string,\n}\n\nexport interface FlightPlanRes {\n   flightPlan: FlightPlan,\n}\n\nexport interface FlightPlan {\n   arrivesAt: Date,\n   departure: string,\n   destination: string,\n   distance: number,\n   fuelConsumed: number,\n   fuelRemaining: number,\n   id: string,\n   shipId: string,\n   terminatedAt: Date | null,\n   timeRemainingInSeconds: number,\n}\n\nexport interface AvailableStructures {\n   allowedLocationTypes: LocationType[],\n   consumes: CargoType[],\n   price: number,\n   name: string,\n   produces: CargoType[],\n   symbol: string,\n}\n\nexport interface AvailableStructuresResponse {\n   structures: AvailableStructures[]\n}\n","import { configureStore, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n   FlightPlan, Planet, OwnedLoan, OwnedShip, User, System, CargoType, Purchase, Marketplace, Ship,\n} from '../Api/types';\n\nexport interface StoredMarket {\n   updatedAt: number,\n   planet: Planet,\n}\n\ninterface InitialState {\n   user: {\n      credits: number,\n      loans: OwnedLoan[],\n      ships: OwnedShip[],\n      username: string | undefined\n   },\n   account: {\n      token: string,\n      username: string\n   },\n   flightPlans: FlightPlan[],\n   marketData: StoredMarket[],\n   automateAll: boolean,\n   systems: System[],\n   availableShips: Ship[],\n   spyShips: OwnedShip[],\n}\n\nconst initialState: InitialState = {\n   user: {\n      credits: 0,\n      loans: [],\n      ships: [],\n      username: undefined,\n   },\n   account: {\n      token: '',\n      username: '',\n   },\n   flightPlans: [],\n   marketData: [],\n   automateAll: false,\n   systems: [],\n   availableShips: [],\n   spyShips: [],\n};\n\nconst spacetraders = createSlice({\n   name: 'spacetraders',\n   initialState,\n   reducers: {\n      reset: (state) => {\n         Object.assign(state, initialState);\n      },\n      setUser: (state, { payload }:PayloadAction<User>) => {\n         state.user = payload.user;\n      },\n      setToken: (state, { payload }:PayloadAction<{ username:string, token:string }>) => {\n         state.account = payload;\n      },\n      setCredits: (state, { payload }:PayloadAction<number>) => {\n         state.user.credits = payload;\n      },\n      addLoan: (state, { payload }:PayloadAction<OwnedLoan>) => {\n         state.user.loans.push(payload);\n      },\n      updateLoans: (state, { payload }:PayloadAction<OwnedLoan[]>) => {\n         state.user.loans = payload;\n      },\n      addShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         state.user.ships.push(payload);\n      },\n      updateShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         Object.assign(state.user.ships.find((x) => x.id === payload.id), payload);\n      },\n      updateShips: (state, { payload }:PayloadAction<OwnedShip[]>) => {\n         state.user.ships = payload;\n      },\n      addFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         state.flightPlans.push(payload);\n\n         // update ship with new flightplan Id\n         const ship = state.user.ships.find((x) => x.id === payload.shipId);\n         if (ship) {\n            ship.location = undefined;\n            ship.flightPlanId = payload.id;\n            ship.spaceAvailable += payload.fuelConsumed;\n            const fuel = ship.cargo.find((x) => x.good === CargoType.Fuel);\n            if (fuel && payload.fuelRemaining > 0) {\n               fuel.quantity = payload.fuelRemaining;\n            } else if (fuel && payload.fuelRemaining === 0) {\n               ship.cargo.splice(ship.cargo.findIndex((x) => x.good === CargoType.Fuel), 1);\n            }\n         }\n      },\n      removeFlightPlan: (state, { payload }:PayloadAction<FlightPlan>) => {\n         if (state.flightPlans.findIndex((x) => x.id === payload.id) > -1) {\n            state.flightPlans.splice(state.flightPlans.findIndex((x) => x.id === payload.id), 1);\n\n            // update ship with new location\n            const ship = state.user.ships.find((x) => x.id === payload.shipId);\n            if (ship) {\n               ship.location = payload.destination;\n               ship.flightPlanId = undefined;\n            }\n         }\n      },\n      updateMarketData: (state, { payload }:PayloadAction<StoredMarket>) => {\n         // check state for existing market object\n         if (state.marketData.some((item) => (item.planet.symbol === payload.planet.symbol))) {\n            state.marketData = state.marketData.map((item) => ((item.planet.symbol === payload.planet.symbol) ? payload : item));\n         } else {\n            state.marketData.push(payload);\n         }\n         localStorage.setItem('marketData', JSON.stringify(state.marketData));\n      },\n      updateGoodPriceAfterBuy: (state, { payload }:PayloadAction<Purchase>) => {\n         const market = state.marketData.find((x) => x.planet.symbol === payload.ship.location);\n         if (market) {\n            const marketplace = market.planet.marketplace.find((x) => x.symbol === payload.order.good);\n            if (marketplace) {\n               marketplace.purchasePricePerUnit = payload.order.pricePerUnit;\n            }\n         }\n      },\n      updateGoodPriceAfterSell: (state, { payload }:PayloadAction<Purchase>) => {\n         const market = state.marketData.find((x) => x.planet.symbol === payload.ship.location);\n         if (market) {\n            const marketplace = market.planet.marketplace.find((x) => x.symbol === payload.order.good);\n            if (marketplace) {\n               marketplace.sellPricePerUnit = payload.order.pricePerUnit;\n            }\n         }\n      },\n      setSystems: (state, { payload }:PayloadAction<System[]>) => {\n         state.systems = payload;\n      },\n      setAllAutomationState: (state, { payload }:PayloadAction<boolean>) => {\n         state.automateAll = payload;\n      },\n      setAvailableShips: (state, { payload }:PayloadAction<Ship[]>) => {\n         state.availableShips = payload;\n      },\n      updateScrapShip: (state, { payload }:PayloadAction<{ ship:OwnedShip, result:string }>) => {\n         state.user.ships.splice((state.user.ships.findIndex((x) => x.id === payload.ship.id)), 1);\n         const credits = parseInt(payload.result.replace(/[^0-9]/g, ''), 10);\n         state.user.credits += credits;\n      },\n      setSpyShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         state.spyShips.push(payload);\n         localStorage.setItem('spyShips', JSON.stringify(state.spyShips));\n      },\n      removeSpyShip: (state, { payload }:PayloadAction<OwnedShip>) => {\n         state.spyShips.splice(state.spyShips.findIndex((x) => x.id === payload.id), 1);\n         localStorage.setItem('spyShips', JSON.stringify(state.spyShips));\n      },\n   },\n});\n\nexport const {\n   setUser, setToken, setCredits, updateShip, addFlightPlan, removeFlightPlan,\n   updateMarketData, reset, addLoan, addShip,\n   updateShips, setSystems, updateLoans, setAllAutomationState, updateGoodPriceAfterBuy,\n   updateGoodPriceAfterSell, setAvailableShips, updateScrapShip, setSpyShip, removeSpyShip,\n} = spacetraders.actions;\n\nconst { reducer } = spacetraders;\n\n// STORE\n\nconst store = configureStore({\n   reducer,\n   preloadedState: undefined,\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ModalPlaceholder = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#ecebeb\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"400\" height=\"44\" />\n   </ContentLoader>\n);\n\nexport const CardLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={400}\n      height={60}\n      viewBox=\"0 0 400 60\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n      <rect x=\"0\" y=\"45\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n   </ContentLoader>\n);\n\nexport const HeaderLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={200}\n      height={20}\n      viewBox=\"0 0 200 20\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"20\" />\n   </ContentLoader>\n);\n\nexport const ProfileLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={300}\n      height={200}\n      viewBox=\"0 0 300 200\"\n      backgroundColor=\"#374151\"\n      foregroundColor=\"#4B5563\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n      <rect x=\"0\" y=\"30\" rx=\"15\" ry=\"15\" width=\"250\" height=\"30\" />\n   </ContentLoader>\n);\n\nexport const AutoStepLoader = () => (\n   <ContentLoader\n      speed={2}\n      width={398}\n      height={100}\n      viewBox=\"0 0 398 100\"\n      backgroundColor=\"#D1D5DB\"\n      foregroundColor=\"#E5E7EB\"\n   >\n      <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n      <rect x=\"0\" y=\"50\" rx=\"5\" ry=\"5\" width=\"398\" height=\"48\" />\n   </ContentLoader>\n);\n\nexport const MarketCardLoader = () => (\n   <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n      <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n         <ContentLoader\n            speed={2}\n            width={100}\n            height={20}\n            viewBox=\"0 0 100 20\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"100\" height=\"20\" />\n         </ContentLoader>\n      </div>\n      <div className=\"text-sm my-3\">\n         <ContentLoader\n            speed={2}\n            width={175}\n            height={70}\n            viewBox=\"0 0 175 70\"\n            backgroundColor=\"#9CA3AF\"\n            foregroundColor=\"#D1D5DB\"\n         >\n            <rect x=\"0\" y=\"0\" rx=\"7.5\" ry=\"7.5\" width=\"125\" height=\"15\" />\n            <rect x=\"15\" y=\"25\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n            <rect x=\"15\" y=\"50\" rx=\"7.5\" ry=\"7.5\" width=\"150\" height=\"15\" />\n         </ContentLoader>\n      </div>\n   </div>\n);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { reset, RootState } from '../store';\nimport { HeaderLoader } from './SkeletonLoaders';\n\nconst NavBar = () => {\n   const user = useSelector((state:RootState) => state.user);\n   const { token } = useSelector((state:RootState) => state.account);\n   const [dropDownOpen, setDropDownOpen] = useState(false);\n   const ref = useRef<HTMLDivElement>(null);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      // All to close the user dropdown on page click\n      const pageEvent = (e:MouseEvent) => {\n         if (ref.current !== null && !ref.current.contains(e.target as Node)) {\n            setDropDownOpen(false);\n         }\n      };\n\n      if (dropDownOpen) {\n         window.addEventListener('mousedown', pageEvent);\n      }\n\n      return () => {\n         window.removeEventListener('mousedown', pageEvent);\n      };\n   }, [dropDownOpen]);\n\n   const logout = () => {\n      dispatch(reset());\n      localStorage.removeItem('apiKey');\n   };\n\n   return (\n      <div className=\"px-8 text-gray-50 w-full min-h-16 bg-gray-900 flex justify-between items-center\">\n         <div className=\"flex items-center\">\n            <div className=\"relative mr-1 pt-1\">\n               <button type=\"button\" className=\"text-gray-50 hover:text-gray-300\" onClick={() => setDropDownOpen(true)}>\n                  <svg className=\"mt-1 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                     <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n               </button>\n               { dropDownOpen\n               && (\n                  <div ref={ref} className=\"origin-top-left absolute left-0 mt-2 w-72 rounded-sm shadow-lg text-gray-700 bg-gray-200 ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n                     <div className=\"py-1\" role=\"none\">\n                        <p className=\"text-gray-900 text-xs px-4 pt-2\">Token</p>\n                        <p className=\"text-xs px-4 pt-1\">{ token }</p>\n                        <button type=\"button\" className=\"block w-full text-left px-4 py-2 mt-2 text-sm hover:bg-gray-300 hover:text-gray-900\" role=\"menuitem\" onClick={logout}>\n                           Log out\n                        </button>\n                     </div>\n                  </div>\n               )}\n            </div>\n            {user.username === undefined\n               ? <HeaderLoader />\n               : (\n                  <React.Fragment>\n                     <h1><NavLink to=\"/\" className=\"text-xl hover:text-yellow-600\">{user.username}</NavLink></h1>\n                     <span className=\"text-xs text-gray-400 ml-4\">{ user.ships.length } ship{ user.ships.length === 1 ? '' : 's'}</span>\n                     <span className=\"text-xs text-gray-400 ml-4\">{ user.credits.toLocaleString() } credits</span>\n                  </React.Fragment>\n               )}\n         </div>\n         <div className=\"flex flex-row divide-x divide-gray-600\">\n            <NavLink to=\"/ships\" title=\"ships\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"currentColor\" strokeWidth={1.3} viewBox=\"0 0 512.001 512.001\">\n                  <path d=\"m226 182.707h60v30h-60z\" />\n                  <path d=\"m482 340.339-95.167-73.476c-25.568-19.74-40.833-50.809-40.833-83.112v-46.044c0-28.454-8.007-56.148-23.156-80.091-14.729-23.279-35.535-42.055-60.168-54.298l-6.676-3.318-6.676 3.318c-24.632 12.243-45.438 31.019-60.168 54.298-15.148 23.943-23.156 51.637-23.156 80.091v46.044c0 32.303-15.265 63.372-40.833 83.112l-95.167 73.476v111.662h106v60h240v-60h106zm-226-306.578c32.849 18.929 54.461 51.693 59.067 88.946h-118.133c4.605-37.254 26.217-70.018 59.066-88.946zm-60 118.946h120v269.294h-120zm90 299.294v30h-60v-30zm-226-96.924 83.5-64.468c8.403-6.488 15.934-13.932 22.5-22.106v153.498h-106zm106 96.924h30v30h-30zm180 30h-30v-30h30zm106-60h-106v-153.498c6.565 8.174 14.096 15.618 22.499 22.106l83.501 64.468z\" />\n               </svg>\n               <p>Shipyard</p>\n            </NavLink>\n            <NavLink to=\"/money\" title=\"loans\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n               </svg>\n               <p>Money Manager</p>\n            </NavLink>\n            <NavLink to=\"/markets\" title=\"Markets\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\n               </svg>\n               <p>Markets</p>\n            </NavLink>\n            <NavLink to=\"/systems\" title=\"locations\" className=\"flex items-center text-sm px-2 hover:text-yellow-600\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n               </svg>\n               <p>Locations</p>\n            </NavLink>\n         </div>\n      </div>\n   );\n};\n\nexport default NavBar;\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"api.worker.js\");\n}\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-webpack-loader-syntax */\n/* eslint-disable react/prop-types */\nimport { Remote, wrap } from 'comlink';\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Api from 'worker-loader?filename=api.worker.js!./Api/api.worker';\nimport { Api as ApiClass, ApiType } from './Api/api.worker';\nimport { setToken } from './store';\n\ninterface Token {\n   username: string,\n   token: string\n}\n\n/** Big thanks to Redmega on Discord for coming up with 99% of this */\n\nexport const WorkerContext = createContext<[Remote<ApiClass>]>(undefined as unknown as [Remote<ApiClass>]);\n\nexport const WorkerProvider: React.FunctionComponent = function WorkerProvider({ children }) {\n   const [worker, setWorker] = useState<[Remote<ApiClass>]>();\n   const dispatch = useDispatch();\n   const apiKey = localStorage.getItem('apiKey') ? JSON.parse(localStorage.getItem('apiKey') as string) as Token : null;\n\n   // all your setup with async ref, etc.\n   useEffect(() => {\n      const ApiWorker = wrap<ApiType>(new Api());\n\n      if (apiKey) {\n         dispatch(setToken(apiKey));\n         (new ApiWorker(apiKey.username, apiKey.token)).then((api) => {\n            setWorker([api]);\n         });\n      } else {\n         (new ApiWorker().then((api) => {\n            setWorker([api]);\n         }));\n      }\n   }, []);\n\n   // We ensure worker is instantiated before rendering the rest of the dom tree\n   return <WorkerContext.Provider value={worker as [Remote<ApiClass>]}>{!!worker && children}</WorkerContext.Provider>;\n};\n","import React, { useContext, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setToken, setUser } from '../store';\nimport { WorkerContext } from '../WorkerContext';\n\nconst GetApiKey = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const [userName, setUserName] = useState('');\n   const [userToken, setUserToken] = useState('');\n   const [formValid, setFormValid] = useState(false);\n   const [signIn, setSignIn] = useState(false);\n   const [error, setError] = useState('');\n   const dispatch = useDispatch();\n   const [disabled, setDisabled] = useState(false);\n\n   const getApiKey = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            const token = await apiWorker.getToken(userName);\n            localStorage.setItem('apiKey', JSON.stringify({ username: token.user.username, token: token.token }));\n            dispatch(setToken({ username: token.user.username, token: token.token }));\n            await apiWorker.setCredentials(userName, token.token);\n            const user = await apiWorker.getUser();\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const Login = async (e: React.FormEvent) => {\n      setDisabled(true);\n      e.preventDefault();\n      if (formValid) {\n         try {\n            await apiWorker.setCredentials(userName, userToken);\n\n            // Validate the user/token\n            const user = await apiWorker.getUser();\n\n            localStorage.setItem('apiKey', JSON.stringify({ username: userName, token: userToken }));\n            dispatch(setToken({ username: userName, token: userToken }));\n            dispatch(setUser(user));\n         } catch (err:unknown) {\n            setDisabled(false);\n            setError((err as Error).message);\n         }\n      }\n   };\n\n   const validate = () => {\n      const valid = document.querySelector('form')?.checkValidity() as boolean;\n      setFormValid(valid);\n   };\n\n   return (\n      <div className=\"bg-gray-800 text-gray-200 w-full h-full flex flex-col items-center justify-center\">\n         <h1 className=\"text-4xl\">Welcome to Vocivos!</h1>\n         <h2 className=\"mb-6\">A SpaceTraders API interface</h2>\n         { error\n            && <p className=\"bg-red-300 text-red-800 px-4 py-3 mb-4\">{ error }</p>}\n         <div className=\"flex items-left flex-col\">\n            { signIn\n               ? (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <div>\n                           <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        </div>\n                        <div className=\"mt-3\">\n                           <input type=\"text\" placeholder=\"Token\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserToken(e.target.value); validate(); }} />\n                        </div>\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={Login}>Login</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Need an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(false)}>Register</button></p>\n                  </div>\n               )\n               : (\n                  <div className=\"border border-gray-700 rounded p-7 px-10 shadow-lg bg-gray-900\">\n                     <form className=\"mt-2\">\n                        <input type=\"text\" placeholder=\"Username\" className=\"w-full text-gray-700 py-2 px-2 box-border border border-gray-400 rounded\" onChange={(e) => { setUserName(e.target.value); validate(); }} required />\n                        <div className=\"mt-3\">\n                           <button type=\"submit\" className=\"py-2 px-2 w-full text-white bg-green-600 rounded hover:bg-green-700 disabled:opacity-50 disabled:cursor-default disabled:bg-green-600\" disabled={disabled} onClick={getApiKey}>Sign Up</button>\n                        </div>\n                     </form>\n                     <p className=\"text-sm mt-4 text-center\">Already have an account? <button type=\"button\" className=\"text-yellow-500 hover:text-yellow-400\" onClick={() => setSignIn(true)}>Sign in</button></p>\n                  </div>\n               )}\n         </div>\n      </div>\n   );\n};\n\nexport default GetApiKey;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Marketplace, OwnedShip } from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Buy = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Marketplace>();\n   const [purchaseQuantity, setPurchaseQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         const data = (await apiWorker.getMarket(ship.location)).location.marketplace;\n         // sort market data alphabetically by symbol\n         setMarketData([...data].sort(((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0))));\n      };\n      getMarket();\n   }, []);\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      const maxCargo = Math.floor(ship.spaceAvailable / selectedMarket.volumePerUnit);\n\n      if (maxCargo * selectedMarket.purchasePricePerUnit < credits && maxCargo <= selectedMarket.quantityAvailable && maxCargo <= 300) {\n         return maxCargo;\n      } if (maxCargo > selectedMarket.quantityAvailable && selectedMarket.quantityAvailable <= 300) {\n         return selectedMarket.quantityAvailable;\n      } if (Math.floor(credits / selectedMarket.purchasePricePerUnit) > 300) {\n         return 300;\n      }\n\n      return Math.floor(credits / selectedMarket.purchasePricePerUnit);\n   };\n\n   const purchaseMarket = async () => {\n      if (!selectedMarket) { return; }\n      try {\n         setWorking(true);\n         const result = await apiWorker.purchaseOrder(ship.id, selectedMarket.symbol, purchaseQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err:unknown) {\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Market Buy</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {marketData?.map((market) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.symbol === market.symbol ? 'z-10' : ''}`} key={market.symbol + market.quantityAvailable + market.pricePerUnit + market.volumePerUnit}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(market.symbol) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ market.quantityAvailable.toLocaleString() } units available</span></p>\n                                    <p className=\"text-sm\">{ (market.purchasePricePerUnit).toLocaleString() } credit{ (market.purchasePricePerUnit) > 1 ? 's' : ''} per unit</p>\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded mr-3 hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => setSelectedMarket(market)}\n                                             disabled={market.quantityAvailable <= 0}\n                                          >Buy\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <div className=\"flex\">\n                                 <input type=\"number\" min={0} max={maxQuantity()} value={purchaseQuantity} placeholder=\"Quantity\" className=\"flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setPurchaseQuantity(parseInt(e.target.value, 10))} />\n                                 <button type=\"button\" className=\"ml-2 bg-blue-400 text-gray-100 px-3 py-2 rounded hover:bg-blue-500\" onClick={() => setPurchaseQuantity(maxQuantity)}>Max</button>\n                              </div>\n                              <button\n                                 type=\"button\"\n                                 className=\"mt-2 w-full px-3 py-2 bg-green-400 text-white rounded hover:bg-green-500 disabled:opacity-50 disabled:bg-green-400 disabled:cursor-default\"\n                                 disabled={(purchaseQuantity * selectedMarket.purchasePricePerUnit <= 0) || ((purchaseQuantity * selectedMarket.purchasePricePerUnit > credits) || (working))}\n                                 onClick={purchaseMarket}\n                              >\n                                 <span className={working ? 'hidden' : 'inline'}>Purchase for { (purchaseQuantity * selectedMarket.purchasePricePerUnit).toLocaleString() } credit{ purchaseQuantity * selectedMarket.purchasePricePerUnit > 1 ? 's' : ''}</span>\n                                 <span className={!working ? 'hidden' : 'inline'}>Please wait...</span>\n                              </button>\n                              <button type=\"button\" className=\"text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setPurchaseQuantity(0); }}>Back</button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Buy;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n   Cargo, LocationType, Marketplace, OwnedShip,\n} from '../../Api/types';\nimport { RootState, setCredits, updateShip } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Sell = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { systems } = useSelector((state:RootState) => state);\n   const dispatch = useDispatch();\n   const [marketData, setMarketData] = useState<Marketplace[]>();\n   const [selectedMarket, setSelectedMarket] = useState<Cargo>();\n   const [sellQuantity, setSellQuantity] = useState<number>(0);\n   const [working, setWorking] = useState<boolean>(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getMarket = async () => {\n         if (!ship.location) { return; }\n         try {\n            const data = (await apiWorker.getMarket(ship.location)).location.marketplace;\n            setMarketData(data);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      getMarket();\n   }, []);\n\n   const maxQuantity = (): number => {\n      if (!selectedMarket) { return 0; }\n\n      if (selectedMarket.quantity <= 300) {\n         return selectedMarket.quantity;\n      }\n\n      return 300;\n   };\n\n   const sellMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await apiWorker.sellOrder(ship.id, selectedMarket.good, sellQuantity);\n         dispatch(setCredits(result.credits));\n         dispatch(updateShip(result.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const deleteMarket = async () => {\n      try {\n         if (!selectedMarket) { return; }\n         setWorking(true);\n         const result = await apiWorker.deleteOrder(ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await apiWorker.shipInfo(ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const depositGoods = async () => {\n      try {\n         if (!selectedMarket || !ship.location) { return; }\n         setWorking(true);\n         const result = await apiWorker.depositGoods(ship.location, ship.id, selectedMarket.good, sellQuantity);\n         const shipInfo = await apiWorker.shipInfo(ship.id);\n         dispatch(updateShip(shipInfo.ship));\n         setSelectedMarket(undefined);\n         handleClose();\n      } catch (err: unknown) {\n         setError((err as Error).message);\n         setWorking(false);\n      }\n   };\n\n   const sellPrice = () => {\n      if (selectedMarket && (marketData?.find((x) => x.symbol === selectedMarket.good))) {\n         const good = marketData?.find((x) => x.symbol === selectedMarket.good) as Marketplace;\n         return (sellQuantity * good.sellPricePerUnit).toLocaleString();\n      }\n      return null;\n   };\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={() => { setSelectedMarket(undefined); handleClose(); }} />\n         <div className={`modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto ${selectedMarket ? 'min-h-1/3' : ''}`}>\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Your Cargo</h3>\n               { error\n                  && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!marketData\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {ship.cargo?.map((cargo) => (\n                              <div className={`py-3 flex justify-between items-center bg-gray-100 w-full ${selectedMarket ? 'absolute' : ''} ${selectedMarket?.good === cargo.good ? 'z-10' : ''}`} key={cargo.good + cargo.quantity + cargo.totalVolume}>\n                                 <div>\n                                    <p className=\"font-semibold\">{ formatString(cargo.good) } <span className=\"ml-3 text-sm text-gray-500 font-normal\">{ cargo.quantity.toLocaleString() } units available</span></p>\n                                    { marketData?.some((x) => x.symbol === cargo.good)\n                                       && <p className=\"text-sm\">{ sellPrice() } credits per unit</p>}\n                                 </div>\n                                 { !selectedMarket\n                                    && (\n                                       <div>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm bg-blue-500 text-white px-4 py-1 rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             // disabled={!marketData?.some((x) => x.symbol === cargo.good)}\n                                             onClick={() => setSelectedMarket(cargo)}\n                                          >Manage\n                                          </button>\n                                       </div>\n                                    )}\n                              </div>\n                           ))}\n                        </div>\n                     )}\n                  { selectedMarket\n                        && (\n                           <div className=\"absolute top-20 w-full text-center\">\n                              <input type=\"number\" min={0} max={selectedMarket.quantity} value={sellQuantity} placeholder=\"Quantity\" className=\"w-full flex-grow px-3 py-2 border border-gray-300 rounded focus:border-blue-500 focus:outline-none\" onChange={(e) => setSellQuantity(parseInt(e.target.value, 10))} />\n                              <button type=\"button\" className=\"text-sm block text-blue-500 hover:text-blue-600\" onClick={() => setSellQuantity(maxQuantity)}>Set Max Available</button>\n                              <div>\n                                 { !working\n                                    ? (\n                                       <React.Fragment>\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 mr-3 px-3 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50 disabled:bg-red-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working}\n                                             onClick={deleteMarket}\n                                          >\n                                             Delete { sellQuantity } units\n                                          </button>\n                                          { systems.find((system) => system.symbol === ship.location?.split('-')[0])?.locations.some((location) => ship.location === location.symbol && location.type === LocationType.Wormhole)\n                                             ? (\n                                                <button\n                                                   type=\"button\"\n                                                   className=\"text-sm mt-2 mr-3 px-3 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 disabled:opacity-50 disabled:bg-purple-500 disabled:cursor-default\"\n                                                   disabled={(sellQuantity <= 0) || working}\n                                                   onClick={depositGoods}\n                                                >\n                                                   Donate { sellQuantity } units\n                                                </button>\n                                             ) : null}\n                                          <button\n                                             type=\"button\"\n                                             className=\"text-sm mt-2 px-3 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50 disabled:bg-green-500 disabled:cursor-default\"\n                                             disabled={(sellQuantity <= 0) || working || (!sellPrice())}\n                                             onClick={sellMarket}\n                                          >\n                                             { sellPrice() !== null\n                                                ? <span className={working ? 'hidden' : 'inline'}>Sell for { sellPrice() } credits</span>\n                                                : <span>Unable to sell</span>}\n                                          </button>\n                                       </React.Fragment>\n                                    )\n                                    : (\n                                       <p>Please wait...</p>\n                                    )}\n                              </div>\n                              <button type=\"button\" className=\"flex items-center text-sm text-red-400 mt-3 hover:text-red-500\" onClick={() => { setSelectedMarket(undefined); setError(''); setSellQuantity(0); }}>\n                                 <svg className=\"h-3 w-3\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                    <path fillRule=\"evenodd\" d=\"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                                 </svg>\n                                 Back\n                              </button>\n                           </div>\n                        )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Sell;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport {\n   OwnedShip, Location, LocationType, CargoType, FlightPlan,\n} from '../../Api/types';\nimport {\n   addFlightPlan, RootState, setCredits, updateShip, updateShips,\n} from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { ModalPlaceholder } from '../SkeletonLoaders';\n\ninterface Props {\n   handleClose: () => void,\n   shipError: (message:string) => void,\n   show: boolean,\n   ship: OwnedShip\n}\n\nconst Travel = ({\n   handleClose, shipError, show, ship,\n}: Props) => {\n   const { systems } = useSelector((state:RootState) => state);\n   const [apiWorker] = useContext(WorkerContext);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>(systems.find((x) => x.symbol === ship.location?.split('-')[0])?.locations as Location[]);\n   const [error, setError] = useState<string>('');\n   const [autoBuyFuel, setAutoBuyFuel] = useState(true);\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900 z-10' : 'hidden';\n\n   useEffect(() => {\n      const getLocations = async () => {\n         if (!ship.location) { return; }\n         try {\n            const loc = (await apiWorker.getLocations(ship.location.split('-')[0])).locations;\n            setLocations(loc);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      if (!systems || systems.length === 0) {\n         getLocations();\n      }\n   }, []);\n\n   const createFlightPlan = async (type: LocationType, location: string, retry = true) => {\n      try {\n         let result: FlightPlan;\n         if (type === LocationType.Wormhole && ship.location === location) {\n            result = (await apiWorker.warpJump(ship.id)).flightPlan;\n         } else {\n            result = (await apiWorker.createFlightPlan(ship.id, location)).flightPlan;\n         }\n         dispatch(addFlightPlan(result));\n         handleClose();\n      } catch (err: unknown) {\n         const { message } = err as Error;\n         // Try to automatically buy the required fuel if ship has insufficient fuel\n         if (retry && autoBuyFuel && message && message.startsWith('Ship has insufficient fuel for flight plan')) {\n            const requiredFuelString = message.match(/\\d+/);\n            if (requiredFuelString) {\n               try {\n                  const fuel = parseInt(requiredFuelString[0], 10);\n                  const result = await apiWorker.purchaseOrder(ship.id, CargoType.Fuel, fuel);\n                  dispatch(setCredits(result.credits));\n                  dispatch(updateShip(result.ship));\n                  createFlightPlan(type, location, false);\n               } catch (e: unknown) {\n                  setError((e as Error).message);\n               }\n            }\n         } else {\n            setError(message);\n            // If the ship failed a warp jump, it's destroyed so we should update the ships\n            if (type === LocationType.Wormhole) {\n               try {\n                  const { ships } = await apiWorker.ownedShips();\n                  dispatch(updateShips(ships));\n                  shipError(message);\n               } catch (e: unknown) {\n                  setError((e as Error).message);\n               }\n            }\n         }\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-gray-100 w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto min-h-1/3\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-3\">Set Destination</h3>\n               <div className=\"text-sm mb-4\">\n                  <label htmlFor=\"autoBuyFuel\" className=\"flex items-center cursor-pointer\">\n                     <input type=\"checkbox\" id=\"autoBuyFuel\" name=\"autoBuyFuel\" checked={autoBuyFuel} onChange={(e) => setAutoBuyFuel(e.target.checked)} />\n                     <span className=\"ml-1\">Automatically buy required fuel</span>\n                  </label>\n               </div>\n               { error\n               && <p className=\"py-4 px-2 bg-red-500 text-sm text-gray-100 text-center\">{ error }</p>}\n               <div className=\"relative\">\n                  {!locations\n                     ? (\n                        <React.Fragment>\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                           <ModalPlaceholder />\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"divide-y\">\n                           {locations.map((location) => (\n                              <div className=\"py-2 flex justify-between items-center\" key={location.symbol + location.name}>\n                                 <div>\n                                    <p>{ location.name }</p>\n                                    <p className=\"text-sm text-gray-500\">{ location.symbol }</p>\n                                 </div>\n                                 <div>\n                                    { ship.location === location.symbol && location.type !== LocationType.Wormhole\n                                       ? <p className=\"text-sm text-gray-600 cursor-default\">Current location</p>\n                                       : (\n                                          <button\n                                             type=\"button\"\n                                             className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600 disabled:opacity-50 disabled:cursor-default disabled:bg-blue-500\"\n                                             onClick={() => createFlightPlan(location.type, location.symbol)}\n                                          >{ location.type === LocationType.Wormhole && ship.location === location.symbol ? 'Warp' : 'Travel' }\n                                          </button>\n                                       )}\n                                 </div>\n                              </div>\n                           ))}\n                        </div>\n                     )}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default Travel;\n","import React from 'react';\n\ninterface Props {\n   completed: number,\n}\n\nconst TravelProgressBar = (props: Props) => {\n   const { completed } = props;\n\n   return (\n      <div className=\"h-0.5 w-full text-right bg-gray-600\">\n         <div className=\"h-full text-right bg-green-500 max-w-full\" style={{ width: `${completed}%`, transition: 'width 0.5s ease' }}>\n            <span />\n         </div>\n      </div>\n   );\n};\n\nexport default TravelProgressBar;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n   formatDistanceToNowStrict, getUnixTime, isFuture,\n} from 'date-fns';\nimport { toast } from 'react-toastify';\nimport {\n   Cargo, CargoType, OwnedShip,\n} from '../../Api/types';\nimport {\n   removeSpyShip, RootState, setSpyShip, updateScrapShip,\n} from '../../store';\nimport Buy from '../Markets/Buy';\nimport Sell from '../Markets/Sell';\nimport Travel from './Travel';\nimport TravelProgressBar from './TravelProgress';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface Props {\n   ship: OwnedShip,\n   compact?: boolean,\n   shipError?: (message:string) => void,\n}\n\nconst ShipCard = ({ ship, compact, shipError }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const systems = useSelector((state:RootState) => state.systems);\n   const flightPlan = useSelector((state:RootState) => state.flightPlans.find((x) => x.shipId === ship.id));\n   const automation = useSelector((state:RootState) => state.automateAll);\n   const availableShips = useSelector((state:RootState) => state.availableShips);\n   const autoEnabled = useSelector((state:RootState) => state.automateAll);\n   const spyShip = useSelector((state:RootState) => state.spyShips.find((x) => x.id === ship.id));\n   const [showBuyModal, setBuyModalShow] = useState(false);\n   const [showSellModal, setSellModalShow] = useState(false);\n   const [showTravelModal, setTravelModalShow] = useState(false);\n   const [remainingTime, setRemainingTime] = useState<string>();\n   const [time, setTime] = useState<number>(Date.now());\n   const [isHovered, setIsHovered] = useState(false);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      const interval = setInterval(() => setTime(Date.now()), 1000);\n\n      return () => clearInterval(interval);\n   });\n\n   useEffect(() => {\n      if (!flightPlan) { return; }\n\n      setRemainingTime(formatDistanceToNowStrict(new Date(flightPlan.arrivesAt)));\n   }, [time]);\n\n   const fuelIsEmpty = (cargo:Cargo[]) => {\n      const fuel = cargo.filter((x) => x.good === CargoType.Fuel).reduce((acc, item) => acc + item.quantity, 0);\n      return !(fuel > 0);\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const calcProgress = () => {\n      if (!flightPlan) { return 0; }\n\n      return (((Date.now() / 1000) - (getUnixTime(new Date(flightPlan.arrivesAt)) - flightPlan.timeRemainingInSeconds)) / flightPlan.timeRemainingInSeconds) * 100;\n   };\n\n   const getShipValue = () => {\n      const price = availableShips.find((x) => x.type === ship.type)?.purchaseLocations[0].price;\n      return price ? Math.round(price * 0.25).toLocaleString() : 'unknown';\n   };\n\n   const scrapShip = async () => {\n      try {\n         const result = (await apiWorker.scrapShip(ship.id)).success;\n         dispatch(updateScrapShip({ ship, result }));\n         toast.success(result, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   const setSpy = (isChecked: boolean) => {\n      if (isChecked) {\n         dispatch(setSpyShip(ship));\n      } else {\n         dispatch(removeSpyShip(ship));\n      }\n   };\n\n   return (\n      <React.Fragment>\n         { showBuyModal ? <Buy show={showBuyModal} ship={ship} handleClose={() => setBuyModalShow(false)} /> : null }\n         { showSellModal ? <Sell show={showSellModal} ship={ship} handleClose={() => setSellModalShow(false)} /> : null }\n         { showTravelModal ? <Travel show={showTravelModal} ship={ship} handleClose={() => setTravelModalShow(false)} shipError={(message) => shipError && shipError(message)} /> : null }\n         { compact ? (\n            <div className=\"p-3 bg-gray-900 border border-gray-700 rounded divide-y divide-gray-500 hover:border-yellow-900 hover:shadow-xl\">\n               <div className=\"flex justify-between items-center \">\n                  <div className=\"text-left\">\n                     <h3>{ ship.type }</h3>\n                     <p className=\"text-xs text-gray-400\">{ ship.location ?? 'In transit' }</p>\n                  </div>\n                  { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <div className=\"text-right\">\n                           <p className=\"text-xs text-gray-400\">In Transit</p>\n                           <p className=\"text-xs text-gray-300\">{ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' }</p>\n                        </div>\n                     ) : (\n                        <div>\n                           { automation\n                              ? <p className=\"text-sm\">Automating</p>\n                              : (\n                                 <React.Fragment>\n                                    <button type=\"button\" title=\"Travel\" className=\"mr-2 w-6 h-6 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\" onClick={() => setTravelModalShow(true)} disabled={fuelIsEmpty(ship.cargo)}>\n                                       <p className=\"text-sm font-bold\">T</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Buy\" className=\"mr-2 w-6 h-6 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">B</p>\n                                    </button>\n                                    <button type=\"button\" title=\"Sell\" className=\"mr-2 w-6 h-6 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>\n                                       <p className=\"text-sm font-bold\">S</p>\n                                    </button>\n                                 </React.Fragment>\n                              )}\n                        </div>\n                     )}\n               </div>\n               { (flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                  ? <div className=\"mt-2\"><TravelProgressBar completed={calcProgress()} /></div> : null}\n            </div>\n         ) : (\n            <div className=\"focus:outline-none bg-gray-900 border border-gray-700 rounded\">\n               <div className=\"relative flex justify-between items-center p-3 bg-gray-700 border-b border-gray-600\" onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\n                  <button\n                     type=\"button\"\n                     className={`absolute top-0 right-0 mt-1.5 mr-1 ${isHovered ? 'block' : 'hidden'}`}\n                     title={`Scrap ship for ${getShipValue()} credits`}\n                     onClick={() => scrapShip()}\n                     disabled={autoEnabled}\n                  >\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mx-1 h-4 w-4 text-red-400 hover:text-red-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                     </svg>\n                  </button>\n                  <div>\n                     <div className=\"flex items-baseline\">\n                        <h3 className=\"text-xl\">{ ship.type }</h3>\n                        <div className={`flex items-center ml-2 mx-1 text-blue-400 hover:text-blue-500 ${isHovered || spyShip ? 'block' : 'hidden'}`} title={spyShip ? 'Remove spy' : 'Set as spy'}>\n                           <input type=\"checkbox\" className=\"spyShipState opacity-0 absolute h-4 w-4 cursor-pointer\" checked={spyShip !== undefined} onChange={(e) => setSpy(e.target.checked)} />\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                              <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                              <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                  </div>\n                  <div className=\"flex flex-col\">\n                     <div className=\"grid grid-cols-3 gap-2 mt-1\">\n                        <div className=\"flex items-center\">\n                           <div className=\"w-5 h-5 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                           </div>\n                           <p>{ ship.speed }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                           </div>\n                           <p>{ ship.weapons }</p>\n                        </div>\n                        <div className=\"flex items-center\">\n                           <div className=\"w-4 h-4 mr-1\">\n                              <svg fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                                 <g>\n                                    <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                       v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                       c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                       c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                       V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                       c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                       c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                                    />\n                                 </g>\n                              </svg>\n                           </div>\n                           <p>{ ship.plating }</p>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"py-3 px-3 pl-2 border-b border-gray-700 relative\">\n                  {(flightPlan && isFuture(new Date(flightPlan.arrivesAt))) || !ship.location\n                     ? (\n                        <React.Fragment>\n                           <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center\">\n                                 <svg className=\"w-6 h-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                 </svg>\n                                 <p className=\"flex items-center mt-0.5\">\n                                    { systems.find((x) => x.symbol === flightPlan?.departure.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.departure)?.name }\n                                    <svg className=\"h-4 w-4 mx-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                       <path fillRule=\"evenodd\" d=\"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                    { systems.find((x) => x.symbol === flightPlan?.destination.split('-')[0])?.locations.find((x) => x.symbol === flightPlan?.destination)?.name }\n                                 </p>\n                              </div>\n                              <span className=\"text-sm text-gray-400 mt-1\">({ remainingTime ? `Arrives in ${remainingTime}` : 'ETA Unknown' })</span>\n                           </div>\n                           { automation\n                              && (\n                                 <div className=\"relative z-10 w-full flex items-center justify-end pr-0.5 mt-2\">\n                                    <p className=\"text-xs\">Automating</p>\n                                 </div>\n                              )}\n                           <div className=\"absolute inset-0\">\n                              <div><TravelProgressBar completed={calcProgress()} /></div>\n                           </div>\n                        </React.Fragment>\n                     )\n                     : (\n                        <div className=\"w-full flex justify-between items-center\">\n                           <div className=\"flex items-center\">\n                              <svg className=\"h-6 w-6 mr-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.3} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                              </svg>\n                              <p className=\"pt-0.5\">{ systems.find((x) => x.symbol === ship.location?.split('-')[0])?.locations.find((x) => x.symbol === ship.location)?.name }</p>\n                              <span className=\"ml-1 pt-1 text-sm text-gray-400\">({ ship.location })</span>\n                           </div>\n                           <div>\n                              { automation\n                                 ? null : (\n                                    <React.Fragment>\n                                       <button\n                                          type=\"button\"\n                                          className=\"text-xs mr-2 px-2 py-1 bg-blue-500 rounded hover:bg-blue-600 disabled:opacity-50 disabled:bg-blue-500 disabled:cursor-default\"\n                                          onClick={() => setTravelModalShow(true)}\n                                       >Travel\n                                       </button>\n                                    </React.Fragment>\n                                 )}\n                           </div>\n                        </div>\n                     )}\n               </div>\n               <div className=\"p-3\">\n                  <div className=\"flex items-center mb-2\">\n                     <p className=\"mr-3\">Cargo <span className=\"ml-2 text-sm text-gray-400\">{ ship.maxCargo - ship.spaceAvailable } of { ship.maxCargo }</span></p>\n                     { ship.location && !automation\n                     && (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"text-xs mr-2 px-2 py-1 bg-green-500 rounded hover:bg-green-600\" onClick={() => setBuyModalShow(true)}>Buy</button>\n                           <button type=\"button\" className=\"text-xs px-2 py-1 bg-red-500 rounded hover:bg-red-600\" onClick={() => setSellModalShow(true)}>Sell</button>\n                        </React.Fragment>\n                     )}\n                  </div>\n                  <div className=\"pl-3\">\n                     { ship.cargo.slice().sort((a, b) => ((a.good > b.good) ? 1 : (b.good > a.good) ? -1 : 0)).map((cargo) => (\n                        <p className=\"text-sm py-0.5\" key={cargo.good + cargo.quantity + cargo.totalVolume + ship.id}>{ formatString(cargo.good) } ({ cargo.quantity } units)</p>\n                     ))}\n                  </div>\n               </div>\n            </div>\n         )}\n      </React.Fragment>\n   );\n};\n\nShipCard.defaultProps = {\n   compact: false,\n   shipError: '',\n};\n\nexport default ShipCard;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-webpack-loader-syntax */\nimport React, {\n   Suspense, useContext, useEffect, useState,\n} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Comlink from 'comlink';\nimport AutomationWorker from 'worker-loader?filename=automation.worker.js!./automation';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { AutomationType, Automation } from './automation';\nimport store, {\n   addFlightPlan, addShip, removeFlightPlan, reset, RootState, setAllAutomationState, setAvailableShips, setCredits,\n   setSpyShip,\n   setSystems,\n   setUser, StoredMarket, updateGoodPriceAfterBuy, updateGoodPriceAfterSell, updateMarketData, updateShip,\n} from './store';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignIn from './components/SignIn';\nimport Profile from './components/Profile';\nimport Ships from './components/Ships/Ships';\nimport Systems from './components/Systems/Systems';\nimport Location from './components/Systems/Location';\nimport Loans from './components/Money/Money';\nimport {\n   CargoType, FlightPlan, OwnedShip, Purchase,\n} from './Api/types';\nimport Markets from './components/Markets/Markets';\nimport { AutoAction } from './components/Automation/Models';\nimport { WorkerContext } from './WorkerContext';\nimport Structures from './components/Systems/Structures';\n\nexport interface WorkerDataUpdate {\n   type: AutoAction.Travel | AutoAction.AddFlightPlan | AutoAction.RemoveFlightPlan | AutoAction.Buy | AutoAction.Sell,\n   data: FlightPlan | Purchase,\n}\n\nexport interface WorkerError {\n   shipId: string,\n   error: string | null,\n}\n\nenum AutomationWorkerApiAction {\n   Buy,\n   Sell,\n   CreateFlightPlan,\n   MarketData,\n   BuyShip,\n   RemoveFlightPlan,\n   GetFlightPlan,\n   UpdateShip,\n}\n\nfunction App() {\n   // const store = useSelector((state:RootState) => state);\n   const {\n      account, user, automateAll, flightPlans,\n   } = useSelector((state:RootState) => state);\n   const [automationWorker, setAutomationWorker] = useState<[Comlink.Remote<Automation>]>();\n   const dispatch = useDispatch();\n   const [apiWorker] = useContext(WorkerContext);\n\n   useEffect(() => {\n      const FetchAccount = async () => {\n         try {\n            const result = await apiWorker.getUser();\n            dispatch(setUser(result));\n\n            // only needed because the ships property on the user response does not contain the 'flightPlanId' property\n            if (result.user.ships.some((x) => x.location === undefined)) {\n               const { ships } = await apiWorker.ownedShips();\n\n               ships.forEach(async (ship) => {\n                  if (ship.flightPlanId) {\n                     const { flightPlan } = await apiWorker.queryFlightPlan(ship.flightPlanId);\n                     if (flightPlan.terminatedAt === null) {\n                        dispatch(addFlightPlan(flightPlan));\n                     }\n                  }\n               });\n            }\n\n            const getSystems = async () => {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            };\n            getSystems();\n\n            // Update market data stored in local storage\n            const marketDataStore = localStorage.getItem('marketData');\n            const loadedMarketData = marketDataStore !== null ? JSON.parse(marketDataStore) as StoredMarket[] : null;\n            loadedMarketData?.map((data) => (\n               dispatch(updateMarketData(data))\n            ));\n\n            // Update spy ships, if any saved\n            const spyShipsData = localStorage.getItem('spyShips');\n            const loadedSpyShipsData = spyShipsData !== null ? JSON.parse(spyShipsData) as OwnedShip[] : null;\n            loadedSpyShipsData?.map((data) => (\n               dispatch(setSpyShip(data))\n            ));\n         } catch (err: unknown) {\n            if ((err as Error).message === 'Invalid username or token.') {\n               dispatch(reset());\n               localStorage.removeItem('apiKey');\n            }\n         }\n      };\n\n      const GetShips = async () => {\n         try {\n            const getShips = await apiWorker.availableShips();\n            getShips.ships.sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n            dispatch(setAvailableShips(getShips.ships));\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n\n      if (account.username && account.token) {\n         FetchAccount();\n         GetShips();\n      }\n   }, []);\n\n   const webworkerError = (data:string) => {\n      console.log(data);\n      toast.error(data, {\n         position: 'bottom-right',\n         autoClose: false,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: 0,\n      });\n      dispatch(setAllAutomationState(false));\n   };\n\n   const automationWorkerMakeApiCall = async (action: AutomationWorkerApiAction, data: { shipId?: string, good?: CargoType, quantity?: number, to?: string, location?: string, flightPlan?: FlightPlan }) => {\n      switch (action) {\n         case AutomationWorkerApiAction.Buy: {\n            const order = await apiWorker.purchaseOrder(data.shipId as string, data.good as CargoType, data.quantity as number);\n            dispatch(setCredits(order.credits));\n            dispatch(updateShip(order.ship));\n            dispatch(updateGoodPriceAfterBuy(order));\n            return order;\n         }\n         case AutomationWorkerApiAction.Sell: {\n            const order = await apiWorker.sellOrder(data.shipId as string, data.good as CargoType, data.quantity as number);\n            dispatch(setCredits(order.credits));\n            dispatch(updateShip(order.ship));\n            dispatch(updateGoodPriceAfterSell(order));\n            return order;\n         }\n         case AutomationWorkerApiAction.CreateFlightPlan: {\n            const flightPlan = await apiWorker.createFlightPlan(data.shipId as string, data.to as string);\n            dispatch(addFlightPlan(flightPlan.flightPlan));\n            return flightPlan;\n         }\n         case AutomationWorkerApiAction.RemoveFlightPlan: {\n            dispatch(removeFlightPlan(data.flightPlan as FlightPlan));\n            return null;\n         }\n         case AutomationWorkerApiAction.GetFlightPlan: {\n            const flightPlan = await apiWorker.queryFlightPlan(data.shipId as string);\n            return flightPlan;\n         }\n         case AutomationWorkerApiAction.MarketData: {\n            const market = await apiWorker.getMarket(data.location as string);\n            dispatch(updateMarketData({ updatedAt: Date.now(), planet: market.location }));\n            return market;\n         }\n         case AutomationWorkerApiAction.BuyShip: {\n            const newShip = await apiWorker.buyShip(data.location as string, data.shipId as string);\n            dispatch(setCredits(newShip.credits));\n            dispatch(addShip(newShip.ship));\n            return newShip;\n         }\n         case AutomationWorkerApiAction.UpdateShip: {\n            const shipInfo = await apiWorker.shipInfo(data.shipId);\n            dispatch(updateShip(shipInfo.ship));\n            return shipInfo.ship;\n         }\n         default:\n            return null;\n      }\n   };\n\n   const automationGetStore = async () => (store.getState());\n\n   useEffect(() => {\n      if (automationWorker) {\n         automationWorker[0].updateState(store.getState());\n      }\n   }, [user.ships.length, flightPlans]);\n\n   useEffect(() => {\n      const createWorker = async () => {\n         const AutoWorker = Comlink.wrap<AutomationType>(new AutomationWorker());\n         const instance = await new AutoWorker(Comlink.proxy(automationGetStore), Comlink.proxy(automationWorkerMakeApiCall), Comlink.proxy(webworkerError));\n         // set state doesn't work here with just a comlink object. needs to be in an array.\n         setAutomationWorker([instance]);\n      };\n\n      if (!automationWorker) {\n         createWorker();\n      }\n\n      if (!automationWorker) { return; }\n\n      if (automateAll) {\n         automationWorker[0].start();\n      } else {\n         automationWorker[0]?.stop();\n      }\n   }, [automateAll]);\n\n   return (\n      <React.Fragment>\n         { (account.token === undefined || account.token === null || account.token.length === 0\n            || account.username === undefined || account.username === null || account.username.length === 0) ? <SignIn /> : (\n               <React.Fragment>\n                  <NavBar />\n                  <ToastContainer />\n                  <div className=\"bg-gray-800 py-4 flex-grow text-gray-200\">\n                     <div className=\"container min-h-full mx-auto\">\n                        <Switch>\n                           <Route exact path=\"/\" component={Profile} />\n                           <Route path=\"/ships\" component={Ships} />\n                           <Route path=\"/money\" component={Loans} />\n                           <Route path=\"/markets\" component={Markets} />\n                           <Route path=\"/structures\" component={Structures} />\n                           <Route path=\"/systems/:location\" component={Location} />\n                           <Suspense fallback={<div />}>\n                              <Route exact path=\"/systems\" component={Systems} />\n                           </Suspense>\n                        </Switch>\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n}\n\nexport default App;\n","import { formatDistanceToNow } from 'date-fns';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LoanStatus } from '../Api/types';\nimport { RootState } from '../store';\nimport ShipCard from './Ships/ShipCard';\nimport { ProfileLoader } from './SkeletonLoaders';\n\nconst Profile = () => {\n   const { username, loans, ships } = useSelector((state:RootState) => state.user);\n   const { systems } = useSelector((state:RootState) => state);\n\n   return (\n      <React.Fragment>\n         {username === undefined\n            ? (\n               <React.Fragment>\n                  <ProfileLoader />\n               </React.Fragment>\n            )\n            : (\n               <React.Fragment>\n                  <p className=\"text-gray-400\">Welcome</p>\n                  <h2 className=\"text-3xl mb-4\">{ username }</h2>\n                  <div>\n                     <h3 className=\"text-xl mb-4\">Messages</h3>\n                     { systems.map((system) => system.locations.map((location) => (location.messages && location.messages.length > 0\n                        ? (\n                           <div className=\"text-sm p-4 bg-blue-800 text-blue-200 rounded-sm\" key={location.symbol}>\n                              <p>{ [...location.messages].slice(0, -2).join(' ') }</p>\n                              <Link to={`/systems/${location.symbol}`} className=\"underline text-xs mt-1 block\">View</Link>\n                           </div>\n                        )\n                        : null)))}\n                  </div>\n                  <div className=\"my-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Loans</h3>\n                     <div className=\"pl-5\">\n                        { loans.filter((x) => x.status === LoanStatus.Current).length === 0\n                           ? (\n                              <div>\n                                 <p>You have no loans!</p>\n                                 <Link to=\"/money/loans/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Get a loan</Link>\n                              </div>\n                           )\n                           : (\n                              <div>\n                                 { loans.filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                                    <p key={loan.id}>{ loan.repaymentAmount.toLocaleString() } credits due { formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                                 ))}\n                              </div>\n                           )}\n                     </div>\n                  </div>\n                  <div className=\"mb-4 min-h-1/4\">\n                     <h3 className=\"text-xl mb-4\">Ships</h3>\n                     <div className=\"pl-5 grid grid-cols-5 gap-3\">\n                        { ships.length === 0\n                           ? (\n                              <div>\n                                 <p>You have no ships :(</p>\n                                 <Link to=\"/ships/available\" className=\"text-sm text-yellow-700 hover:text-blue-600\">Buy a ship</Link>\n                              </div>\n                           )\n                           : (\n                              [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0)).map((ship) => (\n                                 <ShipCard ship={ship} compact key={ship.id} />\n                              ))\n                           )}\n                     </div>\n                  </div>\n               </React.Fragment>\n            )}\n      </React.Fragment>\n   );\n};\n\nexport default Profile;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { PurchaseLocation, Ship } from '../../Api/types';\nimport { addShip, RootState, setCredits } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   ship: Ship | undefined\n}\n\nconst PurchaseShipModal = ({ handleClose, show, ship }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const history = useHistory();\n   const [loading, setLoading] = useState(false);\n\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   const purchaseShip = async (location:string) => {\n      if (!ship) { return; }\n\n      try {\n         setLoading(true);\n         const result = await apiWorker.buyShip(location, ship?.type);\n         dispatch(setCredits(result.credits));\n         dispatch(addShip(result.ship));\n         handleClose;\n         history.push('/ships');\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   const renderButtons = (location: PurchaseLocation) => {\n      if (loading) {\n         return <div />;\n      }\n\n      if (credits > location.price) {\n         return <button type=\"button\" className=\"px-5 py-1 bg-green-500 rounded text-white hover:bg-green-400\" onClick={() => purchaseShip(location.location)}>Buy</button>;\n      }\n\n      return <span className=\"text-xs text-yellow-500\">Insufficient credits</span>;\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Purchase { ship?.type }</h3>\n               <p className=\"text-sm mb-5\">This ship is available in { ship?.purchaseLocations.length } { ship?.purchaseLocations && ship.purchaseLocations.length > 1 ? 'locations' : 'location' }:</p>\n               <ul>\n                  {ship?.purchaseLocations.map((location) => (\n                     <li className=\"flex justify-between items-center my-3\" key={location.location + location.price}>\n                        <span>{ location.location } for { location.price.toLocaleString() } credits </span>\n                        { renderButtons(location) }\n                     </li>\n                  ))}\n               </ul>\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (<button type=\"button\" className=\"px-4 py-1 text-red-500 text-sm border border-red-500 rounded hover:text-red-400 hover:border-red-400\" onClick={handleClose}>Close</button>\n                     ) : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PurchaseShipModal;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Ship } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { CardLoader } from '../SkeletonLoaders';\nimport PurchaseShipModal from './PurchaseShipModal';\n\nconst Available = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { user, availableShips } = useSelector((state:RootState) => state);\n   const [ships, setShips] = useState<Ship[]>(availableShips);\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('class');\n   const [showModal, setModalShow] = useState(false);\n   const [selectedShip, setSelectedShip] = useState<Ship>();\n\n   const lowestPrice = (ship: Ship) => (\n      ship.purchaseLocations.reduce((prev, curr) => (prev.price < curr.price ? prev : curr)).price\n   );\n\n   useEffect(() => {\n      const sort = (value:string) => {\n         if (!ships) {\n            return;\n         }\n\n         let sorted;\n\n         switch (value) {\n            case 'cost':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price > b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price > a.purchaseLocations[0].price) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.purchaseLocations[0].price < b.purchaseLocations[0].price) ? 1 : (b.purchaseLocations[0].price < a.purchaseLocations[0].price) ? -1 : 0));\n               break;\n            case 'type':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.type < b.type) ? 1 : (b.type < a.type) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.type > b.type) ? 1 : (b.type > a.type) ? -1 : 0));\n               break;\n            case 'manufacturer':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.manufacturer > b.manufacturer) ? 1 : (b.manufacturer > a.manufacturer) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.manufacturer < b.manufacturer) ? 1 : (b.manufacturer < a.manufacturer) ? -1 : 0));\n               break;\n            case 'maxCargo':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n               break;\n            case 'speed':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n               break;\n            case 'plating':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n               break;\n            case 'weapons':\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n               break;\n            default:\n               sortOrder ? sorted = [...ships].sort((a, b) => ((a.class > b.class) ? 1 : (b.class > a.class) ? -1 : 0)) : sorted = [...ships].sort((a, b) => ((a.class < b.class) ? 1 : (b.class < a.class) ? -1 : 0));\n               break;\n         }\n\n         setShips(sorted);\n      };\n\n      sort(sortType);\n   }, [sortType, sortOrder]);\n\n   return (\n      <React.Fragment>\n         <PurchaseShipModal show={showModal} ship={selectedShip} handleClose={() => setModalShow(false)} />\n         <h2 className=\"text-3xl mb-5\">Purchase Ships</h2>\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {...(sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !ships\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { ships?.map((ship) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded hover:border-yellow-900 hover:shadow-xl\" key={ship.class + ship.speed + ship.manufacturer + ship.maxCargo} onClick={() => { setModalShow(true); setSelectedShip(ship); }}>\n                  <div className=\"flex justify-between items-center mb-5\">\n                     <div className=\"text-left\">\n                        <h3>{ ship.type }</h3>\n                        <p className=\"text-xs text-gray-400\">{ ship.manufacturer }</p>\n                     </div>\n                     <div className=\"text-right\">\n                        <p className=\"text-xs text-gray-400\">{ ship.purchaseLocations.length } location{ ship.purchaseLocations.length > 1 ? 's' : null }</p>\n                        <p className={`text-sm ${(lowestPrice(ship) > user.credits) ? 'text-red-400' : ''}`}>{ lowestPrice(ship).toLocaleString() } credits</p>\n                     </div>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 485.32 485.32\" enableBackground=\"new 0 0 485.32 485.32\">\n                           <g>\n                              <path d=\"m480.76,79.05c-0.6-0.2-235-78.3-235-78.3-2.1-1-4.1-1-6.2,0l-231.9,76.3c-5.8,2.4-7.2,7.4-7.2,10.3v313.3c0,5.2 3.1,9.3 7.2,10.3l229,73.2c3.5,1.3 7.3,1.8 12.1,0l228.9-73.2c4.1-2.1 7.2-6.2 7.2-10.3v-313.3c5.68434e-14-3.1-1-6.2-4.1-8.3zm-238.1-56.7l198.9,63.9-75.1,24.1-196-64.5 72.2-23.5zm-10.3,438l-211.3-67v-291.4l211.3,67.6v290.8zm10.3-310.2l-198.9-62.8 93.7-30.6 195.3,64.5-90.1,28.9zm10.3,310.2v-291.6l105.1-33.3v32.3l20.6-8.8v-30l85.5-27v290.4h0.1l-211.3,68z\" />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.maxCargo }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m512 358.121c0-68.38-26.629-132.667-74.98-181.02-48.353-48.352-112.64-74.98-181.02-74.98s-132.667 26.629-181.02 74.98c-48.351 48.353-74.98 112.64-74.98 181.02v15h205.016c4.085 12.323 12.371 22.642 23.657 29.305 8.558 5.052 17.953 7.453 27.236 7.453 18.406 0 36.36-9.448 46.376-26.413 1.956-3.313 3.522-6.781 4.717-10.345h204.998zm-235.548 10.093c-6.656 11.276-21.247 15.037-32.526 8.378-5.463-3.225-9.343-8.384-10.925-14.528-1.583-6.144-.679-12.535 2.547-17.998s8.385-9.343 14.528-10.925c1.976-.509 3.977-.76 5.964-.76 4.194 0 8.328 1.12 12.034 3.308 5.463 3.225 9.343 8.384 10.925 14.528 1.583 6.143.679 12.535-2.547 17.997zm31.689-25.093c-.032-.129-.057-.259-.09-.388-2.296-8.916-6.74-16.908-12.887-23.425l43.106-73.015-25.834-15.252-43.106 73.015c-8.675-2.233-17.819-2.264-26.737.032-13.903 3.581-25.58 12.362-32.879 24.726-2.674 4.53-4.636 9.344-5.882 14.307h-173.34c1.992-30.247 9.976-58.88 22.75-84.742l33.311 19.232 15-25.98-33.274-19.21c16.444-24.477 37.541-45.578 62.018-62.022l19.212 33.276 25.98-15-19.236-33.318c25.861-12.774 54.5-20.737 84.746-22.729v38.493h30v-38.493c30.246 1.992 58.885 9.955 84.746 22.729l-19.236 33.318 25.98 15 19.212-33.276c24.477 16.444 45.573 37.545 62.018 62.022l-33.274 19.21 15 25.98 33.311-19.232c12.774 25.862 20.758 54.495 22.75 84.742z\" /></svg>\n                     </div>\n                     <p>{ ship.speed }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg version=\"1.1\" fill=\"#E5E7EB\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\">\n                           <g>\n                              <path d=\"M461.144,60.883L260.312,0.633c-2.809-0.844-5.808-0.844-8.62,0L50.858,60.883c-6.345,1.903-10.69,7.743-10.69,14.367\n                                 v220.916c0,28.734,11.632,58.148,34.573,87.425c17.522,22.36,41.762,44.813,72.048,66.736\n                                 c50.877,36.828,100.975,59.42,103.083,60.363c1.95,0.873,4.039,1.31,6.129,1.31c2.089,0,4.179-0.436,6.129-1.31\n                                 c2.108-0.943,52.205-23.535,103.082-60.363c30.285-21.923,54.525-44.376,72.047-66.736c22.941-29.276,34.573-58.69,34.573-87.425\n                                 V75.25C471.833,68.626,467.489,62.786,461.144,60.883z M441.833,296.166c0,50.852-51.023,98.534-93.826,129.581\n                                 c-38.374,27.833-77.291,47.583-92.005,54.678c-14.714-7.095-53.632-26.845-92.006-54.678\n                                 c-42.804-31.047-93.828-78.729-93.828-129.581V86.41l185.833-55.75l185.832,55.75V296.166z\"\n                              />\n                           </g>\n                        </svg>\n                     </div>\n                     <p>{ ship.plating }</p>\n                  </div>\n                  <div className=\"flex mt-3\">\n                     <div className=\"w-6 h-6 mr-3\">\n                        <svg fill=\"#E5E7EB\" enableBackground=\"new 0 0 510.192 510.192\" viewBox=\"0 0 510.192 510.192\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m510.192 0-122.656 13.628-300.462 300.463-22.694-22.694 33.301-33.3-21.213-21.213-54.514 54.513c10.689 10.689 55.253 55.254 65.86 65.861l-87.814 87.814 65.12 65.12 87.813-87.814c10.633 10.632 55.212 55.211 65.861 65.86l54.513-54.514-21.213-21.213-33.3 33.301-22.694-22.693 300.464-300.463zm-467.766 445.072 22.693-22.694 22.695 22.695-22.694 22.693zm66.602-21.212-22.695-22.695 22.694-22.693 22.694 22.694zm358.881-314.976-293.022 293.022-22.693-22.694 252.835-252.835-21.213-21.213-252.835 252.835-22.694-22.693 293.021-293.023 74.927-8.325z\" /></g></svg>\n                     </div>\n                     <p>{ ship.weapons }</p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import React, { useState } from 'react';\nimport AnimateHeight from 'react-animate-height';\nimport { useSelector } from 'react-redux';\nimport { OwnedShip } from '../../Api/types';\nimport { RootState } from '../../store';\nimport ShipCard from './ShipCard';\n\ninterface Props {\n   sortOrder: boolean,\n   sortType: string,\n   system: string,\n   ships: OwnedShip[],\n   setShipError: (message:string) => void,\n}\n\nconst ShipsGroup = ({\n   sortOrder, sortType, system, ships, setShipError,\n}:Props) => {\n   const { systems } = useSelector((state:RootState) => state);\n   const [collapseHeight, setCollapseHeight] = useState<number | 'auto'>('auto');\n\n   const sortShips = (group:OwnedShip[]) => {\n      switch (sortType) {\n         case 'class':\n            return [...group].sort((a, b) => (sortOrder ? b.class.localeCompare(a.class) : a.class.localeCompare(b.class)));\n         case 'type':\n            return [...group].sort((a, b) => (sortOrder ? b.type.localeCompare(a.type) : a.type.localeCompare(b.type)));\n         case 'manufacturer':\n            return [...group].sort((a, b) => (sortOrder ? a.manufacturer.localeCompare(b.manufacturer) : b.manufacturer.localeCompare(a.manufacturer)));\n         case 'maxCargo':\n            return sortOrder ? [...group].sort((a, b) => ((a.maxCargo > b.maxCargo) ? 1 : (b.maxCargo > a.maxCargo) ? -1 : 0)) : [...group].sort((a, b) => ((a.maxCargo < b.maxCargo) ? 1 : (b.maxCargo < a.maxCargo) ? -1 : 0));\n         case 'speed':\n            return sortOrder ? [...group].sort((a, b) => ((a.speed > b.speed) ? 1 : (b.speed > a.speed) ? -1 : 0)) : [...group].sort((a, b) => ((a.speed < b.speed) ? 1 : (b.speed < a.speed) ? -1 : 0));\n         case 'plating':\n            return sortOrder ? [...group].sort((a, b) => ((a.plating > b.plating) ? 1 : (b.plating > a.plating) ? -1 : 0)) : [...group].sort((a, b) => ((a.plating < b.plating) ? 1 : (b.plating < a.plating) ? -1 : 0));\n         case 'weaponse':\n            return sortOrder ? [...group].sort((a, b) => ((a.weapons > b.weapons) ? 1 : (b.weapons > a.weapons) ? -1 : 0)) : [...group].sort((a, b) => ((a.weapons < b.weapons) ? 1 : (b.weapons < a.weapons) ? -1 : 0));\n         default:\n            return group;\n      }\n   };\n\n   const toggleCollapse = () => {\n      setCollapseHeight(collapseHeight === 0 ? 'auto' : 0);\n   };\n\n   return (\n      <div className=\"mb-10\">\n         <button type=\"button\" className=\"flex items-center border-b border-gray-600 pb-2 mb-4\" onClick={() => toggleCollapse()}>\n            <span className={`mr-2 mt-0.5 ${collapseHeight === 'auto' ? 'arrow-down' : 'arrow-up'}`} />\n            <h3 className=\"text-xl\">{ systems.find((x) => x.symbol === system)?.name } ({ ships.length })</h3>\n         </button>\n         <AnimateHeight id={`locations-${system}`} className={`locations-${system}`} duration={250} height={collapseHeight}>\n            <div className=\"grid grid-cols-4 gap-4\">\n               { sortShips(ships).map((ship) => (\n                  <ShipCard ship={ship} key={ship.id} shipError={(message) => setShipError(message)} />\n               ))}\n            </div>\n         </AnimateHeight>\n      </div>\n   );\n};\n\nexport default ShipsGroup;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CargoType, LocationType, OwnedShip } from '../../Api/types';\nimport {\n   RootState, setAllAutomationState, setCredits, updateShip,\n} from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport ShipsGroup from './ShipsGroup';\n\nexport interface shipGroups {\n   [index:string]: OwnedShip[];\n}\n\nconst Owned = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const { flightPlans, automateAll, systems } = useSelector((state:RootState) => state);\n   const [shipGroups, setShipGroups] = useState<shipGroups>();\n   const [sortOrder, setOrder] = useState(false);\n   const [sortType, setSortType] = useState('type');\n   const [shipError, setShipError] = useState('');\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      const result:shipGroups = {};\n      ships.forEach((ship) => {\n         if (!ship.location) {\n            if (ship.flightPlanId || flightPlans.some((x) => x.shipId === ship.id)) {\n               const destinationSystem = flightPlans.find((x) => x.shipId === ship.id)?.destination.split('-')[0] as string;\n               (result[destinationSystem] = result[destinationSystem] || []).push(ship);\n            } else {\n               (result.UNKNOWN = result.UNKNOWN || []).push(ship);\n            }\n         } else if (result[ship.location.split('-')[0]]) {\n            result[ship.location.split('-')[0]].push(ship);\n         } else {\n            result[ship.location.split('-')[0]] = [];\n            result[ship.location.split('-')[0]].push(ship);\n         }\n      });\n      const ordered = Object.keys(result).sort().reduce((obj:shipGroups, key) => {\n         // eslint-disable-next-line no-param-reassign\n         obj[key] = result[key];\n         return obj;\n      }, {});\n      setShipGroups(ordered);\n   }, [ships, flightPlans]);\n\n   async function setAutomation(state: boolean) {\n      dispatch(setAllAutomationState(state));\n   }\n\n   const automateDisabled = () => (\n      !automateAll\n      && ships.some((x) => systems.find((y) => y.symbol === x.location?.split('-')[0])?.locations.find((z) => z.symbol === x.location)?.type !== LocationType.Wormhole\n      && x.cargo.some((y) => y.good !== CargoType.Fuel))\n   );\n\n   const sellAllCargo = () => {\n      ships.forEach((ship) => {\n         ship.cargo.forEach(async (cargo) => {\n            if (cargo.good !== CargoType.Fuel) {\n               try {\n                  if (cargo.quantity > 500) {\n                     let { quantity } = cargo;\n                     while (quantity > 0) {\n                        // eslint-disable-next-line no-await-in-loop\n                        const result = await apiWorker.sellOrder(ship.id, cargo.good, quantity > 500 ? 500 : quantity);\n                        dispatch(setCredits(result.credits));\n                        dispatch(updateShip(result.ship));\n                        quantity -= 500;\n                     }\n                  } else {\n                     const result = await apiWorker.sellOrder(ship.id, cargo.good, cargo.quantity);\n                     dispatch(setCredits(result.credits));\n                     dispatch(updateShip(result.ship));\n                  }\n               } catch (err: unknown) {\n                  toast.error((err as Error).message, {\n                     position: 'bottom-right',\n                     autoClose: false,\n                     hideProgressBar: false,\n                     closeOnClick: true,\n                     pauseOnHover: true,\n                     draggable: true,\n                     progress: 0,\n                  });\n               }\n            }\n         });\n      });\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Ships</h2>\n         { shipError !== ''\n         && (\n            <div className=\"flex justify-between items-center text-sm py-3 px-2 bg-red-400 text-red-900 mb-5\">\n               <p>{ shipError }</p>\n               <button className=\"w-4 h-4 hover:text-red-700\" type=\"button\" onClick={() => setShipError('')}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <div className=\"mb-5 flex items-center\">\n            <button\n               type=\"button\"\n               className={`text-sm cursor-pointer mr-2 p-2 rounded ${automateAll ? 'bg-red-500 hover:bg-red-600 disabled:bg-red-500' : 'bg-green-600 hover:bg-green-700 disabled:bg-green-600'} disabled:opacity-50 disabled:cursor-default`}\n               title={automateDisabled() ? 'All ships must have no cargo to begin automation' : ''}\n               onClick={() => setAutomation(!automateAll)}\n               disabled={automateDisabled()}\n            >\n               { automateAll ? 'Stop Automation' : 'Automate All' }\n            </button>\n            <button\n               type=\"button\"\n               className=\"text-sm cursor-pointer mr-2 p-2 rounded bg-blue-500 hover:bg-blue-600 disabled:bg-blue-500 disabled:opacity-50 disabled:cursor-default\"\n               onClick={() => sellAllCargo()}\n               disabled={automateAll || (!automateAll && ships.some((x) => x.flightPlanId)) || (!automateAll && !ships.some((x) => x.cargo.some((y) => y.good !== CargoType.Fuel)))}\n            >\n               Sell All Cargo\n            </button>\n         </div>\n         <div className=\"flex mb-5\">\n            <button type=\"button\" className=\"cursor-pointer w-6 h-6\" onClick={() => setOrder(!sortOrder)}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#E5E7EB\" {... (sortOrder ? { transform: 'rotate(180) scale(-1,1)' } : {})} className=\"origin-center\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z\" /></svg>\n            </button>\n            <select name=\"sort\" id=\"sort\" className=\"appearance-none bg-gray-800 text-gray-200 cursor-pointer\" onChange={(e) => setSortType(e.target.value)}>\n               <option value=\"type\">Name</option>\n               <option value=\"manufacturer\">Manufacturer</option>\n               <option value=\"cost\">Cost</option>\n               <option value=\"maxCargo\">Max Cargo</option>\n               <option value=\"speed\">Speed</option>\n               <option value=\"plating\">Plating</option>\n               <option value=\"weapons\">Weapons</option>\n            </select>\n         </div>\n         <div>\n            { shipGroups && Object.keys(shipGroups).map((group) => (\n               <ShipsGroup key={group} system={group} ships={shipGroups[group]} sortOrder={sortOrder} sortType={sortType} setShipError={setShipError} />\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\n\nconst Ships = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/ships\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Owned</NavLink>\n         <NavLink exact to=\"/ships/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Purchase</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/ships\" component={Owned} />\n         <Route path=\"/ships/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Ships;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Location, LocationType } from '../../Api/types';\nimport { RootState, setSystems } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface SortedSystem {\n   symbol: string,\n   name: string,\n   locations: SortedLocation[],\n}\n\ninterface SortedLocation {\n   parent: Location,\n   satellites: Location[],\n}\n\nconst Locations = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const systems = useSelector((state:RootState) => state.systems);\n   const dispatch = useDispatch();\n   const [sortedLocations, setSortedLocations] = useState<SortedSystem[]>([]);\n   const availableShips = useSelector((state:RootState) => state.availableShips);\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            try {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            } catch (err: unknown) {\n               toast.error((err as Error).message, {\n                  position: 'bottom-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: 0,\n               });\n            }\n         }\n      };\n      GetSystems();\n   }, []);\n\n   useEffect(() => {\n      const sorted:SortedSystem[] = [];\n      systems.forEach((system) => {\n         const sortedSystem:SortedSystem = { symbol: system.symbol, name: system.name, locations: [] };\n         sorted.push(sortedSystem);\n         system.locations.forEach((location) => {\n            if (location.type !== LocationType.Moon) {\n               sortedSystem.locations.push({ parent: location, satellites: [] });\n            } else {\n               sortedSystem.locations.find((x) => x.parent.symbol === (`${location.symbol.split('-')[0]}-${location.symbol.split('-')[1]}`))?.satellites.push(location);\n            }\n         });\n      });\n      setSortedLocations(sorted);\n   }, [systems]);\n\n   const hasShipYard = (location: string) => (availableShips.some((x) => x.purchaseLocations.some((y) => y.location === location)));\n\n   return (\n      sortedLocations\n      && (\n         <React.Fragment>\n            <div className=\"grid gap-3 grid-cols-4 mt-4\">\n               { sortedLocations.map((system) => (\n                  <div key={system.symbol}>\n                     <h2 className=\"text-3xl\">{ system.name }</h2>\n                     <ul className=\"mt-3 pl-5\">\n                        {system.locations.map((location) => (\n                           <React.Fragment key={location.parent.symbol}>\n                              <li className=\"py-1 w-max\">\n                                 <Link className=\"underline hover:text-yellow-600\" to={`systems/${location.parent.symbol}`}>{ location.parent.name }</Link>\n                                 { location.parent.structures && location.parent.structures.length > 0\n                                    ? <span className=\"text-sm\"> ({location.parent.structures.length} structure{location.parent.structures.length > 1 ? 's' : ''})</span>\n                                    : ''}\n                                 {hasShipYard(location.parent.symbol)\n                                    ? (\n                                       <span title=\"Has a shipyard\">\n                                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-4 h-4 mb-0.5 ml-2 inline\" fill=\"currentColor\" strokeWidth={1.1} viewBox=\"0 0 512.001 512.001\">\n                                             <path d=\"m226 182.707h60v30h-60z\" />\n                                             <path d=\"m482 340.339-95.167-73.476c-25.568-19.74-40.833-50.809-40.833-83.112v-46.044c0-28.454-8.007-56.148-23.156-80.091-14.729-23.279-35.535-42.055-60.168-54.298l-6.676-3.318-6.676 3.318c-24.632 12.243-45.438 31.019-60.168 54.298-15.148 23.943-23.156 51.637-23.156 80.091v46.044c0 32.303-15.265 63.372-40.833 83.112l-95.167 73.476v111.662h106v60h240v-60h106zm-226-306.578c32.849 18.929 54.461 51.693 59.067 88.946h-118.133c4.605-37.254 26.217-70.018 59.066-88.946zm-60 118.946h120v269.294h-120zm90 299.294v30h-60v-30zm-226-96.924 83.5-64.468c8.403-6.488 15.934-13.932 22.5-22.106v153.498h-106zm106 96.924h30v30h-30zm180 30h-30v-30h30zm106-60h-106v-153.498c6.565 8.174 14.096 15.618 22.499 22.106l83.501 64.468z\" />\n                                          </svg>\n                                       </span>\n                                    )\n                                    : null}\n                              </li>\n                              { location.satellites.length > 0\n                              && (\n                                 <ul className=\"pl-5\">\n                                    {\n                                       location.satellites.map((satellite) => (\n                                          <li key={satellite.symbol} className=\"py-1 w-max\">\n                                             <Link className=\"underline hover:text-yellow-600\" to={`systems/${satellite.symbol}`}>{ satellite.name }</Link>\n                                             { satellite.structures && satellite.structures.length > 0\n                                                ? <span className=\"text-sm\"> ({satellite.structures.length} structure{satellite.structures.length > 1 ? 's' : ''})</span>\n                                                : ''}\n                                             {hasShipYard(satellite.symbol)\n                                                ? (\n                                                   <span title=\"Has a shipyard\">\n                                                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-4 h-4 mb-0.5 ml-2 inline\" fill=\"currentColor\" strokeWidth={1.1} viewBox=\"0 0 512.001 512.001\">\n                                                         <path d=\"m226 182.707h60v30h-60z\" />\n                                                         <path d=\"m482 340.339-95.167-73.476c-25.568-19.74-40.833-50.809-40.833-83.112v-46.044c0-28.454-8.007-56.148-23.156-80.091-14.729-23.279-35.535-42.055-60.168-54.298l-6.676-3.318-6.676 3.318c-24.632 12.243-45.438 31.019-60.168 54.298-15.148 23.943-23.156 51.637-23.156 80.091v46.044c0 32.303-15.265 63.372-40.833 83.112l-95.167 73.476v111.662h106v60h240v-60h106zm-226-306.578c32.849 18.929 54.461 51.693 59.067 88.946h-118.133c4.605-37.254 26.217-70.018 59.066-88.946zm-60 118.946h120v269.294h-120zm90 299.294v30h-60v-30zm-226-96.924 83.5-64.468c8.403-6.488 15.934-13.932 22.5-22.106v153.498h-106zm106 96.924h30v30h-30zm180 30h-30v-30h30zm106-60h-106v-153.498c6.565 8.174 14.096 15.618 22.499 22.106l83.501 64.468z\" />\n                                                      </svg>\n                                                   </span>\n                                                )\n                                                : null}\n                                          </li>\n                                       ))\n                                    }\n                                 </ul>\n                              )}\n                           </React.Fragment>\n                        ))}\n                     </ul>\n                  </div>\n               ))}\n            </div>\n         </React.Fragment>\n      )\n   );\n};\n\nexport default Locations;\n","import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport Locations from './Locations';\n\nconst SystemMap = () => (\n   <React.Fragment>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/systems\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Systems</NavLink>\n         <NavLink exact to=\"/structures\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Structures</NavLink>\n      </div>\n      <div className=\"h-1/4\">\n         <Route exact path=\"/systems\" component={Locations} />\n      </div>\n   </React.Fragment>\n);\n\nexport default SystemMap;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Location } from '../../Api/types';\nimport { WorkerContext } from '../../WorkerContext';\n\nconst LocationInfo = () => {\n   const history = useHistory();\n   const [apiWorker] = useContext(WorkerContext);\n   const { location } = useParams<{ location: string }>();\n   const [locInfo, setLocInfo] = useState<Location>();\n   const [error, setError] = useState<string>();\n\n   useEffect(() => {\n      const getLocation = async () => {\n         try {\n            const result = await apiWorker.getLocation(location);\n            setLocInfo(result.location);\n         } catch (err: unknown) {\n            setError((err as Error).message);\n         }\n      };\n\n      getLocation();\n   }, []);\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <div className=\"mb-4\">\n            <button type=\"button\" className=\"flex items-center text-sm mb-3 hover:text-yellow-600\" onClick={() => history.goBack()}>\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n               </svg>\n               Back\n            </button>\n            <h2 className=\"text-3xl\">{ locInfo?.name }</h2>\n            <h3>({ location })</h3>\n         </div>\n         { locInfo?.messages\n         && (\n            <div className=\"text-sm mb-4 p-4 bg-blue-800 text-blue-200 rounded-sm\">\n               <p>{ [...locInfo.messages].slice(0, -2).join(' ') }</p>\n            </div>\n         )}\n         { locInfo?.structures\n         && (\n            <React.Fragment>\n               <p className=\"mb-2 text-lg border-b border-gray-500 w-max\">Structures</p>\n               {locInfo?.structures?.map((structure) => (\n                  <div className=\"flex items-center\">\n                     <p key={structure.id}>{ formatString(structure.type) }</p>\n                     { structure.ownedBy\n                        && <span className=\"text-sm ml-3\">(Owner: { structure.ownedBy.username })</span>}\n                  </div>\n               ))}\n            </React.Fragment>\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default LocationInfo;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Loan, LoanType } from '../../Api/types';\nimport { addLoan, setCredits } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface Props {\n   handleClose: () => void,\n   show: boolean,\n   loan: Loan | undefined\n}\n\nconst GetLoan = ({ handleClose, show, loan }:Props) => {\n   const [apiWorker] = useContext(WorkerContext);\n   const history = useHistory();\n   const dispatch = useDispatch();\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState<string>('');\n   const showHideModal = show ? 'fixed w-full h-full top-0 left-0 flex items-center justify-center text-gray-900' : 'hidden';\n\n   useEffect(() => {\n      setLoading(false);\n      setError('');\n   }, [loan]);\n\n   const requestLoan = async () => {\n      setLoading(true);\n      try {\n         const result = await apiWorker.newLoan(LoanType.Startup);\n         dispatch(setCredits(result.credits));\n         dispatch(addLoan(result.loan));\n         handleClose;\n         history.push('/loans');\n      } catch (err: unknown) {\n         setLoading(false);\n         setError((err as Error).message);\n      }\n   };\n\n   return (\n      <div className={showHideModal}>\n         <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\" onClick={handleClose} />\n         <div className=\"modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n            <div className=\"modal-content py-4 text-left px-6\">\n               <h3 className=\"text-xl font-semibold mb-6\">Request the following loan</h3>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Loan amount</p>\n                  <p>{ loan?.amount.toLocaleString() } credits</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Due</p>\n                  <p>{ loan?.termInDays } day{ loan && loan?.termInDays > 1 ? 's' : '' }</p>\n               </div>\n               <div className=\"mb-4\">\n                  <p className=\"text-sm text-gray-500\">Repayment Amount</p>\n                  <p>\n                     { loan && (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                     {' '} credits\n                  </p>\n               </div>\n               { error\n                  && (\n                     <div className=\"bg-red-300 text-red-800 px-4 py-3 mb-4 text-center\">\n                        <p>{ error }</p>\n                     </div>\n                  )}\n               <div className=\"flex justify-end pt-2\">\n                  { !loading\n                     ? (\n                        <React.Fragment>\n                           <button type=\"button\" className=\"px-4 py-2 text-red-500 text-sm rounded mr-4 hover:text-red-400\" onClick={handleClose}>Close</button>\n                           <button\n                              type=\"button\"\n                              className=\"w-1/4 px-4 py-2 text-white text-sm bg-green-500 rounded hover:bg-green-400 disabled:opacity-50 disabled:cursor-default disabled:bg-green-500\"\n                              disabled={loading || (error.length > 0)}\n                              onClick={requestLoan}\n                           >Get Loan\n                           </button>\n                        </React.Fragment>\n                     )\n                     : <p className=\"text-sm text-yellow-500 italic\">Please Wait...</p>}\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default GetLoan;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Loan } from '../../Api/types';\nimport { WorkerContext } from '../../WorkerContext';\nimport { CardLoader } from '../SkeletonLoaders';\nimport GetLoan from './GetLoadModal';\n\nconst Available = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const [loans, setLoans] = useState<Loan[]>();\n   const [showModal, setModalShow] = useState(false);\n   const [selectedLoan, setSelectedLoan] = useState<Loan>();\n\n   useEffect(() => {\n      const GetLoans = async () => {\n         try {\n            setLoans((await apiWorker.getLoansAvailable()).loans);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n      GetLoans();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <GetLoan show={showModal} loan={selectedLoan} handleClose={() => { setModalShow(false); setSelectedLoan(undefined); }} />\n         <h2 className=\"text-3xl mb-5\">Available Loans</h2>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !loans\n               && (\n                  <React.Fragment>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\">\n                        <CardLoader />\n                     </div>\n                  </React.Fragment>\n               )}\n            { loans?.map((loan) => (\n               <button type=\"button\" className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left hover:border-yellow-900 hover:shadow-xl\" key={loan.amount + loan.type + loan.rate} onClick={() => { setModalShow(true); setSelectedLoan(loan); }}>\n                  <div className=\"flex justify-between items-start\">\n                     <div className=\"flex items-center\">\n                        <div className=\"w-6 h-6 mr-2\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.1} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                           </svg>\n                        </div>\n                        <h3 className=\"text-lg\">{ loan.amount.toLocaleString() }</h3>\n                     </div>\n                     <div>\n                        { loan.collateralRequired\n                           && <p className=\"text-red-400\">Collateral Required</p> }\n                     </div>\n                  </div>\n                  <p className=\"text-xs text-gray-400\">{ loan.type }</p>\n                  <div className=\"mt-5\">\n                     <div className=\"flex mt-3\">\n                        <div className=\"w-6 h-6 mr-3\" title=\"Term\">\n                           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                           </svg>\n                        </div>\n                        <p>{ loan.termInDays }</p>\n                     </div>\n                     <div className=\"flex mt-3\">\n                        <p className=\"text-xl text-center w-6 h-6 mr-3\" title=\"Origination fee\">%</p>\n                        <p>\n                           <span>{ loan.rate } </span>\n                           <span className=\"text-gray-400 text-sm\">\n                              (\n                              { loan.amount * (loan.rate / 100)}\n                              {' '}\n                              credits)\n                           </span>\n                        </p>\n                     </div>\n                     <p className=\"mt-3 pt-3 text-sm border-t border-gray-700\">\n                        Total repayment cost:\n                        {' '}\n                        { (loan.amount + (loan.amount * (loan.rate / 100))).toLocaleString() }\n                        {' '}\n                        credits\n                     </p>\n                  </div>\n               </button>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Available;\n","import { formatDistanceToNow } from 'date-fns';\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoanStatus } from '../../Api/types';\nimport { RootState, updateLoans } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\ninterface LoanRepaymentResponse {\n   type: 'Success' | 'Error',\n   message: string\n}\n\nconst Owned = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { loans, credits } = useSelector((state:RootState) => state.user);\n   const dispatch = useDispatch();\n   const [response, setResponse] = useState<LoanRepaymentResponse>();\n\n   const repayLoan = async (loanId:string) => {\n      try {\n         const result = await apiWorker.replayLoan(loanId);\n         dispatch(updateLoans(result.user.loans));\n         setResponse({ type: 'Success', message: 'Loan repayed successfully!' });\n      } catch (err: unknown) {\n         setResponse({ type: 'Error', message: (err as Error).message });\n      }\n   };\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Loans</h2>\n         { response\n         && (\n            <div className={`flex justify-between items-center text-sm py-3 px-3 mb-5 ${response.type === 'Success' ? 'bg-green-400 text-green-900' : 'bg-red-400 text-red-900'}`}>\n               <p>{ response.message }</p>\n               <button className={`w-4 h-4 ${response.type === 'Success' ? 'hover:text-green-700' : 'hover:text-red-700'}`} type=\"button\" onClick={() => setResponse(undefined)}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                     <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n               </button>\n            </div>\n         )}\n         <h3 className=\"text-lg mb-4\">Current Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { ([...loans].filter((x) => x.status === LoanStatus.Current)).length > 0\n               ? [...loans].filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                  <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                     <div className=\"mb-3\">\n                        <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                        <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                     </div>\n                     <div>\n                        <p className=\"text-xs text-gray-400\">Due</p>\n                        <p>{ formatDistanceToNow(new Date(loan.due), { addSuffix: true }) }</p>\n                     </div>\n                     { credits > loan.repaymentAmount\n                     && (\n                        <div className=\"mt-3\">\n                           <button type=\"button\" className=\"py-1 px-2 bg-blue-500 rounded hover:bg-blue-600\" onClick={() => repayLoan(loan.id)}>Repay</button>\n                        </div>\n                     )}\n                  </div>\n               ))\n               : <p className=\"text-sm ml-4\">You have no open loans</p>}\n         </div>\n         <h3 className=\"text-lg my-4\">Closed Loans</h3>\n         <div className=\"grid grid-cols-4 gap-4\">\n            { [...loans].filter((x) => x.status !== LoanStatus.Current).map((loan) => (\n               <div className=\"p-3 bg-gray-900 border border-gray-700 rounded text-left\" key={loan.id}>\n                  <div className=\"mb-3\">\n                     <p className=\"text-xs text-gray-400\">Repayment Amount</p>\n                     <p>{ loan.repaymentAmount.toLocaleString() } credits</p>\n                  </div>\n                  <div>\n                     <p className=\"text-xs text-gray-400\">Status</p>\n                     <p>{ formatString(loan.status) }</p>\n                  </div>\n               </div>\n            ))}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Owned;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CargoType, LoanStatus, Ship } from '../../Api/types';\nimport { RootState } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\n\nconst Worth = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { marketData } = useSelector((state:RootState) => state);\n   const { credits, ships, loans } = useSelector((state:RootState) => state.user);\n   const [uniqueShipCount, setUniqueShipCount] = useState<{ shipType: string; uniques: number; }[]>([]);\n   const [shipPrices, setShipPrices] = useState<Ship[]>([]);\n   const [cargos, setCargos] = useState<{ type: CargoType, quantity: number, bestValue: number }[]>([]);\n   const [totalWorth, setTotalWorth] = useState(0);\n\n   useEffect(() => {\n      const getShipPrices = async () => {\n         try {\n            const getShips = await apiWorker.availableShips();\n            setShipPrices(getShips.ships);\n         } catch (err: unknown) {\n            toast.error((err as Error).message, {\n               position: 'bottom-right',\n               autoClose: false,\n               hideProgressBar: false,\n               closeOnClick: true,\n               pauseOnHover: true,\n               draggable: true,\n               progress: 0,\n            });\n         }\n      };\n\n      getShipPrices();\n   }, []);\n\n   useEffect(() => {\n      const shipTypes = new Map(ships.map((ship) => [ship.type, []]));\n\n      const results = Array.from(shipTypes.entries(), ([shipType]) => ({ shipType, uniques: ships.filter((x) => x.type === shipType).length }));\n      setUniqueShipCount(results);\n\n      const cargosArray: { type: CargoType, quantity: number, bestValue: number }[] = [];\n      Object.values(CargoType).forEach((cargo) => {\n         const good = {\n            type: cargo,\n            quantity: 0,\n            bestValue: 0,\n         };\n         const shipsWithCargoType = ships.filter((x) => x.cargo.find((y) => y.good === cargo));\n         shipsWithCargoType.forEach((ship) => {\n            good.quantity += ship.cargo.find((x) => x.good === cargo)?.quantity as number;\n         });\n         const markets = marketData.filter((x) => x.planet.marketplace.find((y) => y.symbol === cargo));\n         const locationsWithGood = markets?.map((market) => market.planet.marketplace.find((marketCargo) => marketCargo.symbol === cargo)?.sellPricePerUnit as number);\n         if (locationsWithGood.length > 0) {\n            good.bestValue = Math.max(...locationsWithGood);\n         } else {\n            good.bestValue = 0;\n         }\n         cargosArray.push(good);\n      });\n      setCargos(cargosArray);\n   }, [ships]);\n\n   useEffect(() => {\n      let total = credits;\n      uniqueShipCount.forEach((ship) => {\n         total += ship.uniques * Math.round((shipPrices.find((x) => x.type === ship.shipType)?.purchaseLocations[0].price as number) * 0.25);\n      });\n      cargos.forEach((cargo) => {\n         total += (cargo.bestValue * cargo.quantity);\n      });\n      loans.filter((x) => x.status === LoanStatus.Current).forEach((loan) => {\n         total -= loan.repaymentAmount;\n      });\n      setTotalWorth(total);\n   }, [credits, uniqueShipCount, cargos, loans, shipPrices]);\n\n   return (\n      <React.Fragment>\n         <table className=\"table-auto w-3/4 mx-auto\">\n            <thead>\n               <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">Commodity</th>\n                  <th className=\"py-3 px-6 text-left\">Type</th>\n                  <th className=\"py-3 px-6 text-center\">Quantity</th>\n                  <th className=\"py-3 px-6 text-right\">Total Value</th>\n               </tr>\n            </thead>\n            <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               <tr className=\"border-b border-gray-500 hover:bg-gray-900\">\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">Credits</td>\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">Cash</td>\n                  <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ credits.toLocaleString() }</td>\n               </tr>\n               { loans.filter((x) => x.status === LoanStatus.Current).map((loan) => (\n                  <tr key={loan.id} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Loan</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Liability</td>\n                     <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                     <td className=\"py-3 px-6 text-red-500 text-right whitespace-nowrap\">-{ loan.repaymentAmount.toLocaleString() }</td>\n                  </tr>\n               ))}\n               { uniqueShipCount.map((ship) => (\n                  <tr key={ship.shipType} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ ship.shipType }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">Ship</td>\n                     <td className=\"py-3 px-6 text-center whitespace-nowrap\">{ ship.uniques.toLocaleString() }</td>\n                     <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ (ship.uniques * Math.round((shipPrices.find((x) => x.type === ship.shipType)?.purchaseLocations[0].price as number) * 0.25)).toLocaleString() }</td>\n                  </tr>\n               ))}\n               { cargos.map((cargo) => {\n                  if (cargo.quantity > 0) {\n                     return (\n                        <tr key={cargo.type} className=\"border-b border-gray-500 hover:bg-gray-900\">\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ cargo.type }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">Cargo</td>\n                           <td className=\"py-3 px-6 text-center whitespace-nowrap\">{ cargo.quantity.toLocaleString() }</td>\n                           <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ (cargo.bestValue * cargo.quantity).toLocaleString() }</td>\n                        </tr>\n                     );\n                  }\n                  return null;\n               })}\n            </tbody>\n            <tfoot className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               <tr className=\"border-b border-gray-500 hover:bg-gray-900\">\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap uppercase\">Total</td>\n                  <td className=\"py-3 px-6 text-left whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-center whitespace-nowrap\">-</td>\n                  <td className=\"py-3 px-6 text-right whitespace-nowrap\">{ totalWorth.toLocaleString() }</td>\n               </tr>\n            </tfoot>\n         </table>\n      </React.Fragment>\n   );\n};\n\nexport default Worth;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Available from './Available';\nimport Owned from './Owned';\nimport Worth from './Worth';\n\nconst Loans = () => (\n   <div>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/money\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Net Worth</NavLink>\n         <NavLink exact to=\"/money/loans\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Your Loans</NavLink>\n         <NavLink exact to=\"/money/loans/available\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Get a Loan</NavLink>\n      </div>\n      <Switch>\n         <Route exact path=\"/money\" component={Worth} />\n         <Route exact path=\"/money/loans\" component={Owned} />\n         <Route path=\"/money/loans/available\" component={Available} />\n      </Switch>\n   </div>\n);\n\nexport default Loans;\n","/* eslint-disable no-continue */\nimport { formatDistanceToNow } from 'date-fns';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { CargoType, Location, Planet } from '../../Api/types';\nimport { RootState, setSystems, updateMarketData } from '../../store';\nimport { WorkerContext } from '../../WorkerContext';\nimport { MarketCardLoader } from '../SkeletonLoaders';\n\ninterface SystemRoutes {\n   system: string;\n   routes: TradeRoute[];\n}\n\ninterface TradeRoute {\n   good: CargoType;\n   from: string;\n   to: string;\n   fuelRequired: number;\n   cpdv: number;\n   lastUpdated: number;\n}\n\nconst Markets = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { ships } = useSelector((state:RootState) => state.user);\n   const marketData = useSelector((state:RootState) => state.marketData);\n   const systems = useSelector((state:RootState) => state.systems);\n   const automationEnabled = useSelector((state:RootState) => state.automateAll);\n   const dispatch = useDispatch();\n   const [locations, setLocations] = useState<Location[]>();\n   const [time, setTime] = useState<number>(Date.now());\n   const [activeSystem, setActiveSystem] = useState<string>();\n\n   const changeSystem = async (system:string) => {\n      try {\n         setActiveSystem(system);\n         setLocations(undefined);\n         const data = (await apiWorker.getLocations(system)).locations;\n         setLocations(data);\n      } catch (err: unknown) {\n         toast.error((err as Error).message, {\n            position: 'bottom-right',\n            autoClose: false,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: 0,\n         });\n      }\n   };\n\n   useEffect(() => {\n      const GetSystems = async () => {\n         if (systems.length === 0) {\n            try {\n               const temp = (await apiWorker.systemsInfo()).systems;\n               dispatch((setSystems(temp)));\n            } catch (err: unknown) {\n               toast.error((err as Error).message, {\n                  position: 'bottom-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: 0,\n               });\n            }\n         }\n      };\n      GetSystems();\n\n      // Update the 'time' state, to refresh \"last updated\" times\n      const interval = setInterval(() => setTime(Date.now()), 60000);\n\n      return () => clearInterval(interval);\n   }, []);\n\n   useEffect(() => {\n      if (systems.length === 0) { return; }\n      changeSystem(systems[0].symbol);\n   }, [systems]);\n\n   useEffect(() => {\n      const getMarketData = async () => {\n         locations?.forEach(async (location) => {\n            if (ships.some((x) => x.location === location.symbol)) {\n               try {\n                  const data = await apiWorker.getMarket(location.symbol);\n                  dispatch(updateMarketData({ updatedAt: Date.now(), planet: data.location }));\n               } catch (err: unknown) {\n                  toast.error((err as Error).message, {\n                     position: 'bottom-right',\n                     autoClose: false,\n                     hideProgressBar: false,\n                     closeOnClick: true,\n                     pauseOnHover: true,\n                     draggable: true,\n                     progress: 0,\n                  });\n               }\n            }\n         });\n      };\n      // When automating, this request can be queued and by the time it executes the ship may have left, which results in an API error\n      if (!automationEnabled) {\n         getMarketData();\n      }\n   }, [locations, ships]);\n\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const getDataForLocation = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      if (!data || data?.planet.marketplace.length === 0) {\n         return <p className=\"mt-3 text-sm text-gray-400\">No data available</p>;\n      }\n\n      return (\n         data?.planet.marketplace.slice().sort((a, b) => ((a.symbol > b.symbol) ? 1 : (b.symbol > a.symbol) ? -1 : 0)).map((market) => (\n            <div className=\"text-sm my-3\" key={market.symbol + market.pricePerUnit + market.volumePerUnit}>\n               <p className=\"font-bold\">{ formatString(market.symbol) }</p>\n               <p className=\"pl-2\">Quantity: { market.quantityAvailable.toLocaleString() }</p>\n               <p className=\"pl-2\">Buy: { (market.purchasePricePerUnit).toLocaleString() } credits</p>\n               <p className=\"pl-2\">Sell: { (market.sellPricePerUnit).toLocaleString() } credits</p>\n            </div>\n         ))\n      );\n   };\n\n   const getUpdatedTime = (location: Location) => {\n      const data = marketData.find((x) => x.planet.symbol === location.symbol);\n\n      if (!data) { return null; }\n\n      return `Updated ${formatDistanceToNow(new Date(data.updatedAt), { addSuffix: true })}`;\n   };\n\n   const getSystemSymbolFromLocation = (location: string) => {\n      if (!location) {\n         console.log(location);\n         return '';\n      }\n      return location.split('-')[0];\n   };\n\n   const distanceBetween = (point1: Planet | Location, point2: Planet | Location) => (\n      Math.ceil(Math.sqrt(((point2.x - point1.x) ** 2) + ((point2.y - point1.y) ** 2)))\n   );\n\n   const fuelRequired = (from: Planet | Location, to: Planet | Location) => (\n      Math.round((distanceBetween(to, from) / 4)) + 1\n   );\n\n   const getBestRoutes = () => {\n      const bestRoutes: SystemRoutes[] = [];\n      const uniqueLocations = Array.from(new Set(marketData.map((market) => market.planet.symbol)));\n      const uniqueSystems:string[] = Array.from(new Set(uniqueLocations.map((location: any) => getSystemSymbolFromLocation(location as string))));\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const system of uniqueSystems) {\n         const bestSystemRoutes: TradeRoute[] = [];\n\n         // eslint-disable-next-line no-restricted-syntax\n         for (const type of Object.values(CargoType)) {\n            if (type === CargoType.Research || type === CargoType.Fuel) { continue; } // exclude research for now\n\n            // all locations that have up-to-date data and have the good in question\n            const data = [...marketData].filter((x) => getSystemSymbolFromLocation(x.planet.symbol) === system && x.planet.marketplace.find((y) => y.symbol === type));\n            // const data = [...this.markets].filter((x) => (Date.now() - x.updatedAt <= this.marketUpdateTime) && x.planet.marketplace.find((y) => y.symbol === type));\n\n            if (data.length <= 1) { continue; }\n            for (let i = 0; i < data.length; i += 1) {\n               const current = data[i];\n\n               for (let y = 0; y < data.length; y += 1) {\n                  if (data[y].planet !== current.planet) {\n                     const creditDiff = (data[y].planet.marketplace.find((x) => x.symbol === type)?.sellPricePerUnit as number) - (current.planet.marketplace.find((x) => x.symbol === type)?.purchasePricePerUnit as number);\n                     const distance = distanceBetween(current.planet, data[y].planet);\n                     const cpdv = creditDiff / distance / (current.planet.marketplace.find((x) => x.symbol === type)?.volumePerUnit as number);\n                     const lastUpdated = current.updatedAt > data[y].updatedAt ? current.updatedAt : data[y].updatedAt;\n\n                     // exclude any negatives because we don't want to trade on routes that lose money\n                     if (cpdv <= 0) { continue; }\n\n                     const existing = bestSystemRoutes.find((x) => x.good === type);\n                     if (existing && existing.cpdv < cpdv) {\n                        bestSystemRoutes[bestSystemRoutes.findIndex((x) => x.good === type)] = {\n                           good: type,\n                           from: current.planet.symbol,\n                           to: data[y].planet.symbol,\n                           fuelRequired: fuelRequired(current.planet, data[y].planet),\n                           cpdv,\n                           lastUpdated,\n                        };\n                     } else if (!existing) {\n                        bestSystemRoutes.push({\n                           good: type,\n                           from: current.planet.symbol,\n                           to: data[y].planet.symbol,\n                           fuelRequired: fuelRequired(current.planet, data[y].planet),\n                           cpdv,\n                           lastUpdated,\n                        });\n                     }\n                  }\n               }\n            }\n         }\n\n         bestRoutes.push({ system, routes: bestSystemRoutes.sort((a, b) => ((a.cpdv < b.cpdv) ? 1 : (b.cpdv < a.cpdv) ? -1 : 0)) });\n      }\n\n      return bestRoutes;\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Markets</h2>\n         <div className=\"my-7\">\n            <h3>Best Routes</h3>\n            <div className=\"flex mt-2\">\n               { getBestRoutes().map((system) => (\n                  <div className=\"w-1/2 mx-6\">\n                     <h4 className=\"text-lg\">{ systems.find((x) => x.symbol === system.system)?.name }</h4>\n                     <table className=\"w-full text-sm\" key={system.system}>\n                        <thead>\n                           <tr className=\"border-b border-gray-500 text-sm leading-normal\">\n                              <th className=\"font-normal text-gray-400 text-left\">Good</th>\n                              <th className=\"font-normal text-gray-400 text-left\">From</th>\n                              <th className=\"font-normal text-gray-400 text-left\">To</th>\n                              <th className=\"font-normal text-gray-400 text-left\">Credits per distance volume</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           { system.routes.map((route) => (\n                              <tr className=\"border-b border-gray-500 hover:bg-gray-900\" key={route.good + route.from + route.to + route.cpdv}>\n                                 <td className=\"py-1\">{ formatString(route.good) }</td>\n                                 <td className=\"py-1\">{ systems.find((x) => x.symbol === getSystemSymbolFromLocation(route.from))?.locations.find((x) => x.symbol === route.from)?.name }</td>\n                                 <td className=\"py-1\">{ systems.find((x) => x.symbol === getSystemSymbolFromLocation(route.to))?.locations.find((x) => x.symbol === route.to)?.name }</td>\n                                 <td className=\"py-1\">{ Math.ceil(route.cpdv * 100) / 100 }</td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </table>\n                  </div>\n               ))}\n            </div>\n         </div>\n         <p className=\"text-xs text-gray-400 mb-1\">System</p>\n         { systems.map((system) => (\n            <button key={system.symbol} type=\"button\" className={`text-sm mr-4 pb-1 mb-5 ${activeSystem === system.symbol ? 'subMenuActive' : ''}`} value={system.symbol} onClick={(e) => changeSystem(e.currentTarget.value)}>{ system.name }</button>\n         ))}\n         <div className=\"grid grid-cols-4 gap-4\">\n            { !locations\n               ? (\n                  <MarketCardLoader />\n               )\n               : (\n                  locations.sort((a, b) => ((a.name > b.name) ? 1 : (b.name > a.name) ? -1 : 0)).map((location) => (\n                     <div className=\"p-3 bg-gray-900 border border-gray-700 rounded\" key={location.symbol}>\n                        <div className=\"flex justify-between items-center pb-2 border-b border-gray-700\">\n                           <h3 className=\"text-xl\">{ location.name }</h3>\n                           <p className=\"text-xs text-gray-400\">{ time && getUpdatedTime(location) }</p>\n                        </div>\n                        { getDataForLocation(location) }\n                     </div>\n                  ))\n               )}\n         </div>\n      </React.Fragment>\n   );\n};\n\nexport default Markets;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AvailableStructures, Location } from '../../../Api/types';\nimport { RootState } from '../../../store';\nimport { WorkerContext } from '../../../WorkerContext';\n\nconst Structures = () => {\n   const { credits } = useSelector((state:RootState) => state.user);\n   const [apiWorker] = useContext(WorkerContext);\n   const [structures, setStructures] = useState<AvailableStructures[]>([]);\n   const [locationsForStructure, setLocationsForStructure] = useState<Location[]>([]);\n   const [selectedStructure, setSelectedStructure] = useState<AvailableStructures>();\n   const [selectedLocation, setSelectedLocation] = useState<Location>();\n\n   useEffect(() => {\n      const getStructures = async () => {\n         setStructures((await apiWorker.getStructures()).structures);\n      };\n      getStructures();\n   }, []);\n\n   // Symbols come from the API as all caps with underscore seperate. Format it to be more readable.\n   const formatString = (value:string) => (\n      value.toLowerCase().split('_').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' '));\n\n   const findStructureLocation = async (structure: AvailableStructures) => {\n      setSelectedStructure(structure);\n      setSelectedLocation(undefined);\n      setLocationsForStructure([]);\n      const locations:Location[] = [];\n      // eslint-disable-next-line no-restricted-syntax\n      for (const locationType of structure.allowedLocationTypes) {\n         // eslint-disable-next-line no-await-in-loop\n         const location = (await apiWorker.getLocationsForStructure(locationType)).locations;\n         location.forEach((loc) => locations.push(loc));\n      }\n      setLocationsForStructure(locations);\n   };\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Available Structures</h2>\n         <h3 className=\"text-lg mt-5 mb-3\">1. Select a structure...</h3>\n         <table className=\"mt-3 table-auto w-full mx-auto\">\n            <thead>\n               <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">Type</th>\n                  <th className=\"py-3 px-6 text-left\">Price</th>\n                  <th className=\"py-3 px-6 text-left\">Allowed Locations</th>\n                  <th className=\"py-3 px-6 text-left\">Consumes</th>\n                  <th className=\"py-3 px-6 text-left\">Produces</th>\n               </tr>\n            </thead>\n            <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n               { structures.map((structure) => (\n                  <tr className={`cursor-pointer border-b border-gray-500 hover:bg-gray-900 ${selectedStructure?.name === structure.name ? 'bg-yellow-600 text-gray-100' : ''}`} key={structure.name + structure.price} onClick={() => findStructureLocation(structure)}>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.name }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.price.toLocaleString() }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.allowedLocationTypes.map((location) => formatString(location)).join(', ') }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.consumes.map((item) => formatString(item)).join(', ') }</td>\n                     <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ structure.produces.map((item) => formatString(item)).join(', ') }</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         { selectedStructure\n         && (\n            <React.Fragment>\n               <h3 className=\"text-lg mt-10 mb-3\">2. Select a location...</h3>\n               <table className=\"mt-3 table-auto w-full mx-auto\">\n                  <thead>\n                     <tr className=\"bg-gray-300 text-gray-700 uppercase text-sm leading-normal\">\n                        <th className=\"py-3 px-6 text-left\">Name</th>\n                        <th className=\"py-3 px-6 text-left\">Type</th>\n                        <th className=\"py-3 px-6 text-left\">Symbol</th>\n                     </tr>\n                  </thead>\n                  <tbody className=\"bg-gray-700 text-gray-200 text-sm font-light\">\n                     { locationsForStructure.map((location) => (\n                        <tr className={`cursor-pointer border-b border-gray-500 hover:bg-gray-900 ${selectedLocation?.symbol === location.symbol ? 'bg-yellow-600 text-gray-100' : ''}`} key={location.symbol} onClick={() => setSelectedLocation(location)}>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ location.name }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ formatString(location.type) }</td>\n                           <td className=\"py-3 px-6 text-left whitespace-nowrap\">{ location.symbol }</td>\n                        </tr>\n                     ))}\n                  </tbody>\n               </table>\n            </React.Fragment>\n         )}\n         { selectedLocation && selectedStructure\n         && (\n            <React.Fragment>\n               <h3 className=\"text-lg mt-10 mb-3\">3. Confirm build</h3>\n               <table className=\"mb-3\">\n                  <thead>\n                     <tr>\n                        <th className=\"pr-10 font-normal text-gray-400 text-left\">Structure</th>\n                        <th className=\"pr-8 font-normal text-gray-400 text-left\">Location</th>\n                        <th className=\"pr-8 font-normal text-gray-400 text-left\">Cost</th>\n                     </tr>\n                  </thead>\n                  <tbody>\n                     <tr>\n                        <td>{ selectedStructure.name }</td>\n                        <td>{ selectedLocation.name }</td>\n                        <td>{ selectedStructure.price.toLocaleString() }</td>\n                     </tr>\n                  </tbody>\n               </table>\n               <button\n                  type=\"button\"\n                  className=\"bg-green-600 px-3 py-1 rounded hover:bg-green-700 disabled:opacity-50 disabled:bg-green-600 disabled:cursor-default\"\n                  disabled={credits < selectedStructure.price}\n               >Build\n               </button>\n            </React.Fragment>\n         )}\n      </React.Fragment>\n   );\n};\n\nexport default Structures;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Structure } from '../../../Api/types';\nimport { RootState } from '../../../store';\nimport { WorkerContext } from '../../../WorkerContext';\n\nconst BuiltStructures = () => {\n   const [apiWorker] = useContext(WorkerContext);\n   const { username } = useSelector((state:RootState) => state.user);\n   const [userStructures, setUserStructures] = useState<Structure[]>([]);\n\n   useEffect(() => {\n      const getLocations = async () => {\n         const locations = (await apiWorker.systemsInfo()).systems;\n         const structures:Structure[] = [];\n\n         locations.forEach((sysLoc) => {\n            sysLoc.locations.forEach((location) => {\n               location.structures?.forEach((structure) => {\n                  if (structure.ownedBy && structure.ownedBy.username === (username as string)) { structures.push(structure); }\n               });\n            });\n         });\n\n         setUserStructures(structures);\n      };\n\n      getLocations();\n   }, []);\n\n   return (\n      <React.Fragment>\n         <h2 className=\"text-3xl mb-5\">Your Structures</h2>\n         { userStructures.length > 0\n            ? (\n               <div>\n                  Your Structures\n               </div>\n            ) : <p>You have no structures</p>}\n      </React.Fragment>\n   );\n};\n\nexport default BuiltStructures;\n","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Build from './Build';\nimport BuiltStructures from './BuiltStructures';\n\nconst Structures = () => (\n   <React.Fragment>\n      <div className=\"text-sm mb-5\">\n         <NavLink exact to=\"/structures\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Structures</NavLink>\n         <NavLink exact to=\"/structures/build\" className=\"mr-4 pb-1\" activeClassName=\"subMenuActive\">Build</NavLink>\n      </div>\n      <div className=\"h-1/4\">\n         <Switch>\n            <Route exact path=\"/structures\" component={BuiltStructures} />\n            <Route exact path=\"/structures/build\" component={Build} />\n         </Switch>\n      </div>\n   </React.Fragment>\n);\n\nexport default Structures;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { WorkerProvider } from './WorkerContext';\nimport store from './store';\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <BrowserRouter basename=\"/Vocivos\">\n            <WorkerProvider>\n               <App />\n            </WorkerProvider>\n         </BrowserRouter>\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}